"Project_Details_Screen As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    BackgroundImage: =
    Height: =Max(App.Height, App.DesignHeight)
    LoadingSpinner: =LoadingSpinner.Data
    LoadingSpinnerColor: =RGBA(105, 121, 126, 1)
    OnHidden: |-
        =Set(NavScreenParam, Blank());
        Set(varInitiativeType, Blank());
        SetFocus(btn_SetCanvasFocus);
        Reset(com_NavTop_Details);
        Reset(com_Dialogue_Details);
        Reset(com_NavLeft_Details);
        Reset(com_FormSection_1); 
        Reset(com_FormSection_2); 
        Reset(com_FormSection_3); 
        Reset(com_FormSection_4); 
        Reset(com_FormSection_5);
        Set(varAddAttachmentDialogue, false);
        Set(varBlurBackground, false);
        UpdateContext({varShowChangeRequestForm: false})
    OnVisible: |-
        =UpdateContext({showLoader:false});
        UpdateContext({varShowSaveDialogue: false});
        UpdateContext({varLoadingDataMessage: If(varIsNewInitiative, "Loading Details", Concatenate("Loading Details for ", varCurrentRecord.InitiativeName))});
        
        SetFocus(btn_SetCanvasFocus);
        
        UpdateContext({varResetComponent: false});UpdateContext({varResetComponent: true});
        
        If(varInitiaitveUpdated, 
        If(varIsDraftInitiative, 
            ClearCollect(collFormValues, If(varCurrentRecord.Brand = Brand.Metro And varCurrentRecord.InitiativeType = InitiativeType.'Device Promotion' Or varCurrentRecord.Brand = Brand.Metro And varCurrentRecord.InitiativeType = InitiativeType.'Service Offer', Filter(ComponentFieldDetails, formID = Concatenate(Text(varCurrentRecord.InitiativeType), " - Metro") And isOnIntake = true), Filter(ComponentFieldDetails, formID = Text(varCurrentRecord.InitiativeType) And isOnIntake = true)))
            ,
            ClearCollect(collFormValues, If(varCurrentRecord.Brand = Brand.Metro And varCurrentRecord.InitiativeType = InitiativeType.'Device Promotion' Or varCurrentRecord.Brand = Brand.Metro And varCurrentRecord.InitiativeType = InitiativeType.'Service Offer', Filter(ComponentFieldDetails, formID = Concatenate(Text(varCurrentRecord.InitiativeType), " - Metro")), Filter(ComponentFieldDetails, formID = Text(varCurrentRecord.InitiativeType)))));
        
                    Set(varRecordEditTrue, varRecordEditPermissions Or varCurrentUserSecurityRole = "GTM" Or varCurrentUserSecurityRole = "Administrator");
        			Patch(collFormValues, LookUp(collFormValues, fieldID = "GALiftType"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).GALiftType, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "Testing"), {fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).Testing, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "AdditionalEligibilityRequirements"), {fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).AdditionalEligibilityRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "Channels"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).Channels, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "CustomerSegment"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).CustomerSegment, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "DeviceFulfillmentInScope"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).DeviceFulfillmentInScope, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "MobileInternetPlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).MobileInternetPlanRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "PlanAndFeatureRequirementsBuild"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).PlanAndFeatureRequirementsBuild, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "PurchaseTypeFinancing"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).PurchaseTypeFinancing, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "VoiceRatePlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).VoiceRatePlanRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "WearablePlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).WearablePlanRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "RatePlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).RatePlanRequirements, Value & "*")}), 
            
            If(!(varCurrentRecord.gtmEntry = varCurrentRecordIDDetails) And !varIsNewInitiative Or varInitiaitveUpdated And !varIsNewInitiative Or IsEmpty(collFormValues) And !varIsNewInitiative, // run if new initiative selected from project picker or was updated in summary
                
                If(varInitiaitveUpdated, 
                    Set(varCurrentRecordIDDetails, varCurrentRecord.gtmEntry);
        			Set(varInitiaitveUpdated, false);  // reset identifier for update record
                    ClearCollect(collFormValues, If(varCurrentRecord.Brand = Brand.Metro And varCurrentRecord.InitiativeType = InitiativeType.'Device Promotion' Or varCurrentRecord.Brand = Brand.Metro And varCurrentRecord.InitiativeType = InitiativeType.'Service Offer', Filter(ComponentFieldDetails, formID = Concatenate(Text(varCurrentRecord.InitiativeType), " - Metro")), Filter(ComponentFieldDetails, formID = Text(varCurrentRecord.InitiativeType))));
        
                    // get user edit permissions on record
                    Set(varRecordPermissions, GetRecordPermisionsforCurrentUser.Run(varCurrentUserRecord.User, varCurrentRecord.gtmEntry).recordpermissions);
                    Set(varRecordEditPermissions, !IsBlank(Find("WriteAccess", varRecordPermissions)));
        
        
                    Set(varGTMEntryID, Concatenate("cat_gtmentries(",varCurrentRecord.gtmEntry,")")); // used on people pickers for gtmEntryID value to patch over API
                    
                    If(Text(varCurrentRecord.gtmEntry) <> varCurrentRecordIDSummary, //check if these values are already queried
                        Set(varEditAccessTeamID, Concatenate(varCurrentRecord.gtmEntry, "+", varEditTeamTemplateID));
                        ClearCollect(colSponsorTeam, ["Sponsoring VP", "Business Owner", "Submitter"]);
        
                        //Set(varTemp, First(varCurrentRecord.cat_gtmentry_Teams).Users);
                        //ClearCollect(colAccessTeams, varCurrentRecord.cat_gtmentry_Teams);
                        //ClearCollect(colEditAccessTeam, Filter(colAccessTeams, 'Team Name' = varEditAccessTeamID));
                        ////ClearCollect(colViewAccessTeam, Filter(colAccessTeams, associatedteamtemplateid.teamtemplatename = "ORBIT - Read Only"));
        
                        //Set(varEditAccessTeamRecord, LookUp(Teams, Team = First(colEditAccessTeam).Team));
                        //If(IsEmpty(colEditAccessTeam), Clear(colEditAccessTeamMembers), ClearCollect(colEditAccessTeamMembers, varEditAccessTeamRecord.Users));
        
        
                        Set(vartest123, First(colProjectTeamRoles).TeamMember); // This needs to be here to make the AddColumns run properly. 
                        //ClearCollect(colTeamRoles, Filter(Choices(RoleType), !(Value = RoleType.Other)));
                        ClearCollect(colTeamRoles, Choices(RoleType));
                        ClearCollect(colProjectTeamRoles, varCurrentRecord.ProjectTeamRoles);
        
                        ClearCollect(colCurrentProjectTeamRoles, 
                            AddColumns(colTeamRoles, 
                                "userName",// If(!IsBlank(LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).TeamMember.Nickname),
                                    //Concatenate(LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).TeamMember.'Last Name', ", ", 
                                    //LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).TeamMember.'First Name')
                                    LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).TeamMember.Nickname,
                                "userJobTitle", LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).TeamMember.Title, 
                                "userID", LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).TeamMember.User,
                                "roleName", LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).Name,
                                "recordID", LookUp(colProjectTeamRoles, RoleType = colTeamRoles[@Value]).ProjectTeamRoles
                                )
                            );
                        );
                        ClearCollect(colCurrentProjectTeamRolesOther, Filter(colProjectTeamRoles, !IsBlank(Name)));
                        ClearCollect(colCurrentProjectTeamRolesGeneral, Filter(colProjectTeamRoles, Text(RoleType) = "Project Team"));
        
                        Set(varRecordEditTrue, varRecordEditPermissions Or varCurrentUserSecurityRole = "GTM" Or varCurrentUserSecurityRole = "Administrator");
        
                        ClearCollect(colBeneficiaryLOB, Filter(BeneficiaryLOBApprovers, Status = 'Status (BeneficiaryLOBApprovers)'.Active));
                    );
                );
        //);
        
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "GALiftType"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).GALiftType, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "Testing"), {fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).Testing, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "AdditionalEligibilityRequirements"), {fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).AdditionalEligibilityRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "Channels"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).Channels, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "CustomerSegment"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).CustomerSegment, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "DeviceFulfillmentInScope"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).DeviceFulfillmentInScope, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "MobileInternetPlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).MobileInternetPlanRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "PlanAndFeatureRequirementsBuild"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).PlanAndFeatureRequirementsBuild, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "PurchaseTypeFinancing"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).PurchaseTypeFinancing, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "VoiceRatePlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).VoiceRatePlanRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "WearablePlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).WearablePlanRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "RatePlanRequirements"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).RatePlanRequirements, Value & "*")});
                    Patch(collFormValues, LookUp(collFormValues, fieldID = "AddALineTypes"),{fieldValue: Concat(LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry).AddALineTypes, Value & "*")});
        
            Set(varActiveProcessStage, LookUp(ORBIT_Initiative_Approval_Process, Cat_Gtmentry.gtmEntry = varCurrentRecord.gtmEntry).'Active Stage'.'Process Stage');
            Set(BpfInstance, LookUp(ORBIT_Initiative_Approval_Process, Cat_Gtmentry.gtmEntry = varCurrentRecord.gtmEntry)); //get BPF instance from Orbit_Initiative_Approval_Process Entity
            ClearCollect(BpfStages, 'CDS-GtmEntries'.GetBPFActivePath(BpfInstance.ORBIT_Initiative_Approval_Process).value); //get active path stages from custom API connector
        
            Clear(colBPFStagesIndexed); //Get indexed collection of BPF active path stages
            ForAll(BpfStages, 
                Collect(colBPFStagesIndexed,
                        Last(FirstN(AddColumns(BpfStages,
                                            "Index",
                                            CountRows(colBPFStagesIndexed)+1
                                    ), 
                                    CountRows(colBPFStagesIndexed)+1
                                )
                        )    
                )
            );
        
            ClearCollect(colPreviousBPFStages, FirstN(colBPFStagesIndexed, LookUp(colBPFStagesIndexed, processstageid = lbl_ActiveProcessStageID.Text).Index)); // Get collection of BPF active path stages to current
            ClearCollect(colStageApprovalUsers, Filter(StageApprovalUsers, OrbitBPF.ORBIT_Initiative_Approval_Process = BpfInstance.ORBIT_Initiative_Approval_Process));
        
            
        );
        
        If(IsBlank(varRecordPermissions),
                // get user edit permissions on record
                Set(varRecordPermissions, GetRecordPermisionsforCurrentUser.Run(varCurrentUserRecord.User, varCurrentRecord.gtmEntry).recordpermissions);
                Set(varRecordEditPermissions, !IsBlank(Find("WriteAccess", varRecordPermissions))));
        
        ClearCollect(colChangeRequests, Filter(varCurrentRecord.'ChangeRequests (cat_ChangeRequest_gtmEntry_cat_gtmEntry)', CRApprovalStage = ApprovalStatus.Pending));
        
        UpdateContext({showLoader:true});
        UpdateContext({varLoadingDataMessage: Concatenate("Loading Data for ", varCurrentRecord.InitiativeName)});
        Reset(com_NavTop_Details);Reset(com_Dialogue_Details);Reset(com_NavLeft_Details)
    Orientation: =If(Project_Details_Screen.Width < Project_Details_Screen.Height, Layout.Vertical, Layout.Horizontal)
    Size: =1 + CountRows(App.SizeBreakpoints) - CountIf(App.SizeBreakpoints, Value >= Project_Details_Screen.Width)
    Width: =Max(App.Width, App.DesignWidth)

    com_NavTop_Details As com_NavTop:
        AdminScreen: =Permissions_Team_Roles_Screen
        Fill: =White
        FormEditMode: =(com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged)
        IsGTM: =varCurrentUserSecurityRole = "Administrator" Or varCurrentUserSecurityRole = "GTM"
        Items: =colTopNavGalleryItems
        ResetComponent: =com_Dialogue_Details.RightButtonAction
        UserFullName: =varCurrentUserNameFL
        Width: =App.Width

    com_InitiativeHeader_Details As com_InitiativeHeader:
        AppID: =varCurrentAppID
        BOEmailAddress: =varCurrentRecord.'Business Owner'.'Primary Email'
        FormValuesChanged: =com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged
        GTMEntryID: =varCurrentRecord.gtmEntry
        isNewInitiative: =varIsNewInitiative
        LegacyGTMEntryID: =If(varCurrentRecord.legacyGTMEntryID = 9999999, "Draft", varCurrentRecord.legacyGTMEntryID)
        resetComponent: =varResetComponent
        showButtons: =varRecordEditTrue Or varIsNewInitiative Or varDevMode Or varIsDraftInitiative Or varRecordEditPermissions
        varInitiativeName: =If(varIsNewInitiative, Concatenate("ORBIT > ", varRequestType, " > ", Coalesce(varInitiativeType, Text(varCurrentRecord.InitiativeType))), Coalesce(LookUp(collFormValues, fieldID = "InitiativeName").fieldValue, varCurrentRecord.InitiativeName))
        varInitiativeType: =Text(varCurrentRecord.InitiativeType)
        varReqFieldsRemaining: =lbl_RequiredFieldsRemainingCount.Text
        varRequestType: =If(varIsNewInitiative, "GO TO MARKET", varCurrentRecord.InitiativeTypeGroup)
        Width: =App.Width - com_NavLeft_Details.Width
        X: =com_NavLeft_Details.X + com_NavLeft_Details.Width
        Y: =com_NavTop_Details.Height
        ZIndex: =2

    Canvas1 As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =App.Height - com_NavTop_Details.Height - com_InitiativeHeader_Details.Height - 10
        Width: =App.Width - com_NavLeft_Details.Width
        X: =com_NavLeft_Details.Width
        Y: =com_NavTop_Details.Height + com_InitiativeHeader_Details.Height + 10
        ZIndex: =3

        DataCard3 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =com_FormSection_1.Height
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            com_FormSection_1 As com_FormSection:
                CheckRequiredFields: =com_InitiativeHeader_Details.CheckReqFieldsOutput
                ComponentHeight: |-
                    =If(varIsNewInitiative, 
                        Switch(First(collFormValues).formID,
                            "Project", 9,
                            "Other", 6,
                            "Device Promotion", 13,
                            "Device Promotion - Metro", 13,
                            "Device Launch", 8,
                            "Service Offer", 10,
                            "Service Offer - Metro", 10,
                            7),
                        Switch(First(collFormValues).formID,
                            "Project", 9,
                            "Other", 6,
                            "Device Promotion", 13,
                            "Device Promotion - Metro", 13,
                            "Device Launch", 8,
                            "Service Offer", 10,
                            "Service Offer - Metro", 10,
                            7)) * 88
                ComponentWidth: =com_FormSection_1.Width
                EditRecord: =varRecordEditTrue Or varRecordEditPermissions
                FormHeightControlValue: |-
                    =/*
                    If(isSectionVisible,SectionTitle.Height, Sum(Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), Max(Filter(com_FormSection.Items, row = Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), sectionID = com_FormSection.FormSectionTitle), height)) * 88)
                    */
                    com_FormSection_1.ComponentHeight
                GTMAccesss: =varCurrentUserSecurityRole = "GTM" Or varCurrentUserSecurityRole = "Administrator" Or varDevMode
                Height: |-
                    =Self.ComponentHeightControlValue
                    
                    /*
                    //com_FormSection_1.FormHeightControlValue
                    If(varIsNewInitiative Or varIsDraftInitiative, 
                    Switch(Coalesce(varInitiativeType, Text(varCurrentRecord.InitiativeType)), 
                    "Project",9,
                    "Other", 6,
                    "Device Promotion", 13,
                    "Device Launch", 8,
                    "Service Offer", 10,
                    6),
                    Switch(Text(varCurrentRecord.InitiativeType),
                    "Project", 9,
                    "Other", 6,
                    "Device Promotion", 13,
                    "Device Launch", 8,
                    "Service Offer", 10,
                    6)) * 88
                    */
                InitiativeType: =Coalesce(varCurrentRecord.InitiativeType, varCurrInitiativeType)
                inputValues: =varCurrentRecord
                IsNewInitiative: =varIsNewInitiative Or varIsDraftInitiative
                TriggerOnReset: =com_Dialogue_SaveWarning_1.LeftButtonAction Or varResetComponent
                Width: =Parent.Width - 15
                ZIndex: =2

            btn_SetCanvasFocus As button:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =RGBA(0, 0, 0, 0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Fill: =If(varDevMode, Blue, RGBA(0, 0, 0, 0))
                FocusedBorderColor: =btn_SetCanvasFocus.BorderColor
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =22
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =
                PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =15
                Text: =""
                Width: =23
                X: =1702
                ZIndex: =3

        DataCard4 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =0
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =2

            com_FormSection_2 As com_FormSection:
                CheckRequiredFields: =com_InitiativeHeader_Details.CheckReqFieldsOutput
                ComponentHeight: |-
                    =If(varIsNewInitiative, 
                        Switch(First(collFormValues).formID,
                            "Project", 12,
                            "Other", 0,
                            "Device Promotion", 19,
                            "Device Promotion - Metro", 16,
                            "Device Launch", 7,
                            "Service Offer", 12,
                            "Service Offer - Metro", 11,
                            9),
                        Switch(First(collFormValues).formID,
                            "Project", 15,
                            "Other", 0,
                            "Device Promotion", 24,
                            "Device Promotion - Metro", 21,
                            "Device Launch", 7,
                            "Service Offer", 17,
                            "Service Offer - Metro", 16,
                            5)) * 88
                ComponentWidth: =com_FormSection_2.Width
                EditRecord: =varRecordEditTrue Or varRecordEditPermissions
                FormHeightControlValue: |-
                    =/*
                    If(isSectionVisible,SectionTitle.Height, Sum(Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), Max(Filter(com_FormSection.Items, row = Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), sectionID = com_FormSection.FormSectionTitle), height)) * 88)
                    */
                    com_FormSection_2.ComponentHeight
                FormSectionTitle: ="Product Details"
                GTMAccesss: =varCurrentUserSecurityRole = "GTM" Or varCurrentUserSecurityRole = "Administrator" Or varDevMode
                Height: =Self.ComponentHeightControlValue
                InitiativeType: =Coalesce(varCurrentRecord.InitiativeType, varCurrInitiativeType)
                inputValues: =varCurrentRecord
                IsNewInitiative: =varIsNewInitiative Or varIsDraftInitiative
                TriggerOnReset: =com_Dialogue_SaveWarning_1.LeftButtonAction Or varResetComponent
                Width: =Parent.Width - 15
                ZIndex: =2

        DataCard5 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =0
            Width: =Parent.Width
            X: =0
            Y: =2
            ZIndex: =3

            com_FormSection_3 As com_FormSection:
                CheckRequiredFields: =com_InitiativeHeader_Details.CheckReqFieldsOutput
                ComponentHeight: |-
                    =If(varIsNewInitiative, 
                        Switch(First(collFormValues).formID,
                            "Project", 13,
                            "Other", 8,
                            "Device Promotion", 7,
                            "Device Promotion - Metro", 5,
                            "Device Launch", 7,
                            "Service Offer", 9,
                            "Service Offer - Metro", 9,
                            0),
                        Switch(First(collFormValues).formID,
                            "Project", 15,
                            "Other", 12,
                            "Device Promotion", 11,
                            "Device Promotion - Metro", 11,
                            "Device Launch", 7,
                            "Service Offer", 13,
                            "Service Offer - Metro", 13,
                            0)) * 88
                ComponentWidth: =com_FormSection_3.Width
                EditRecord: =varRecordEditTrue Or varRecordEditPermissions
                FormHeightControlValue: |-
                    =/*
                    If(isSectionVisible,SectionTitle.Height, Sum(Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), Max(Filter(com_FormSection.Items, row = Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), sectionID = com_FormSection.FormSectionTitle), height)) * 88)
                    */
                    com_FormSection_3.ComponentHeight
                FormSectionTitle: ="Value Proposition"
                GTMAccesss: =varCurrentUserSecurityRole = "GTM" Or varCurrentUserSecurityRole = "Administrator" Or varDevMode
                Height: =com_FormSection_3.ComponentHeightControlValue
                InitiativeType: =Coalesce(varCurrentRecord.InitiativeType, varCurrInitiativeType)
                inputValues: =varCurrentRecord
                IsNewInitiative: =varIsNewInitiative Or varIsDraftInitiative
                TriggerOnReset: =com_Dialogue_SaveWarning_1.LeftButtonAction Or varResetComponent
                Width: =Parent.Width - 15
                ZIndex: =2

        DataCard6 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =0
            Width: =Parent.Width
            X: =0
            Y: =3
            ZIndex: =4

            com_FormSection_5 As com_FormSection:
                CheckRequiredFields: =com_InitiativeHeader_Details.CheckReqFieldsOutput
                ComponentHeight: |-
                    =If(varIsNewInitiative, 
                        Switch(First(collFormValues).formID,
                            "Project", 5,
                            "Other", 0,
                            "Device Promotion", 4,
                            "Device Promotion - Metro", 4,
                            "Device Launch", 0,
                            "Service Offer", 4,
                            "Service Offer - Metro", 4,
                            0),
                        Switch(First(collFormValues).formID,
                            "Project", 5,
                            "Other", 0,
                            "Device Promotion", 4,
                            "Device Promotion - Metro", 4,
                            "Device Launch", 0,
                            "Service Offer", 4,
                            "Service Offer - Metro", 4,
                            0)) * 88
                ComponentWidth: =com_FormSection_5.Width
                EditRecord: =varRecordEditTrue Or varRecordEditPermissions
                FormHeightControlValue: |-
                    =/*
                    If(isSectionVisible,SectionTitle.Height, Sum(Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), Max(Filter(com_FormSection.Items, row = Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), sectionID = com_FormSection.FormSectionTitle), height)) * 88)
                    */
                    com_FormSection_5.ComponentHeight
                FormSectionTitle: ="Financials"
                GTMAccesss: =varCurrentUserSecurityRole = "GTM" Or varCurrentUserSecurityRole = "Administrator" Or varDevMode
                Height: =Self.ComponentHeightControlValue
                InitiativeType: =Coalesce(varCurrentRecord.InitiativeType, varCurrInitiativeType)
                inputValues: =varCurrentRecord
                IsNewInitiative: =varIsNewInitiative Or varIsDraftInitiative
                TriggerOnReset: =com_Dialogue_SaveWarning_1.LeftButtonAction Or varResetComponent
                Width: =Parent.Width - 15
                ZIndex: =2

        DataCard7 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =0
            Width: =Parent.Width
            X: =0
            Y: =4
            ZIndex: =5

            com_FormSection_4 As com_FormSection:
                CheckRequiredFields: =com_InitiativeHeader_Details.CheckReqFieldsOutput
                ComponentHeight: |-
                    =If(varIsNewInitiative, 
                        Switch(First(collFormValues).formID,
                            "Project", 0,
                            "Other", 0,
                            "Device Promotion", 0,
                            "Device Promotion - Metro", 0,
                            "Device Launch", 0,
                            "Device Launch - Metro", 0,
                            "Service Offer", 0,
                            "Service Offer - Metro", 0,
                            0),
                        Switch(First(collFormValues).formID,
                            "Project", 6,
                            "Other", 6,
                            "Device Promotion", 6,
                            "Device Promotion - Metro", 6,
                            "Device Launch", 6,
                            "Service Offer", 6,
                            "Service Offer - Metro", 6,
                            "Lights On", 5,
                            0)) * 88
                ComponentWidth: =com_FormSection_4.Width
                EditRecord: =varRecordEditTrue Or varRecordEditPermissions
                FormHeightControlValue: |-
                    =/*
                    If(isSectionVisible,SectionTitle.Height, Sum(Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), Max(Filter(com_FormSection.Items, row = Max(Filter(com_FormSection.Items, sectionID = com_FormSection.FormSectionTitle), row), sectionID = com_FormSection.FormSectionTitle), height)) * 88)
                    */
                    com_FormSection_4.ComponentHeight
                FormSectionTitle: ="GTM Triage"
                GTMAccesss: =varCurrentUserSecurityRole = "GTM" Or varCurrentUserSecurityRole = "Administrator" Or varDevMode
                Height: =Self.ComponentHeightControlValue
                InitiativeType: =Coalesce(varCurrentRecord.InitiativeType, varCurrInitiativeType)
                inputValues: =varCurrentRecord
                IsNewInitiative: =varIsNewInitiative Or varIsDraftInitiative
                TriggerOnReset: =com_Dialogue_SaveWarning_1.LeftButtonAction Or varResetComponent
                Width: =Parent.Width - 15
                ZIndex: =2

    com_Dialogue_Details As com_Dialogue:
        Button1Text: ="Clear Changes"
        Button2Text: ="Continue Editing"
        DialogueSubText: =""
        DialogueSubText2: ="If you leave now, you will lose any changes that have not yet been saved.  "
        DialogueTextTitle: ="Do you want to save your changes? "
        Height: =1027
        InitiativeType: =Text(varCurrentRecord.InitiativeType)
        NewOrDraft: =varIsNewInitiative Or varIsDraftInitiative
        ResetComponent: |-
            =com_Dialogue_Details.RightButtonAction
            //com_NavTop_Details.ResetComponentOuput Or com_NavLeft_Details.ResetComponentOutput
        Visible: =false
        Y: =53
        ZIndex: =5

    com_NavLeft_Details As com_NavLeft:
        FormEditMode: =(com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged)
        Height: =App.Height - com_NavTop_Details.Height
        Items: =colLeftNavGalleryItems
        ResetComponent: =com_Dialogue_Details.RightButtonAction
        Width: =If(varIsNewInitiative Or varIsDraftInitiative, 0, varSideNavWidth)
        Y: =com_NavTop_Details.Height
        ZIndex: =8

    lbl_RequiredFieldsRemainingCount As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderColor: =lbl_RequiredFieldsRemainingCount.BorderColor
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        HoverBorderColor: =lbl_RequiredFieldsRemainingCount.BorderColor
        HoverColor: =lbl_RequiredFieldsRemainingCount.Color
        HoverFill: =lbl_RequiredFieldsRemainingCount.Fill
        PressedBorderColor: =lbl_RequiredFieldsRemainingCount.BorderColor
        PressedColor: =lbl_RequiredFieldsRemainingCount.Color
        PressedFill: =lbl_RequiredFieldsRemainingCount.Fill
        Size: =13
        Text: =CountRows(gal_RequiredFieldsRemainingGallery.AllItems)
        Visible: =varDevMode
        Width: =86
        Y: =841
        ZIndex: =14

    Rectangle6 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledFill: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(255, 255, 255, .8)
        FocusedBorderColor: =Rectangle6.BorderColor
        FocusedBorderThickness: =4
        Height: =1027
        HoverFill: =RGBA(105, 121, 126, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Visible: =varAddAttachmentDialogue And !varDevMode
        Width: =App.Width
        Y: =53
        ZIndex: =16

    com_LoadingSpinner_Details As com_LoadingSpinner:
        Height: =Canvas1.Height
        SpinnerText: =varLoadingDataMessage
        Visible: |-
            =//!showLoader Or IsEmpty(collFormValues)
            !showLoader
        Width: =Canvas1.Width
        X: =Canvas1.X
        Y: =Canvas1.Y
        ZIndex: =26

    Rectangle8 As rectangle:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        DisabledFill: =RGBA(166, 166, 166, 1)
        DisplayMode: =DisplayMode.Disabled
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderColor: =Rectangle8.BorderColor
        FocusedBorderThickness: =4
        Height: =10
        HoverFill: =RGBA(105, 121, 126, 1)
        PressedFill: =RGBA(105, 121, 126, 1)
        Visible: =false
        Width: =App.Width
        Y: =App.Height - Rectangle8.Height
        ZIndex: =28

    Button5_6 As button:
        BorderColor: =
        BorderStyle: =BorderStyle.None
        BorderThickness: =0
        Color: =RGBA(0, 0, 0, 0)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(0, 0, 0, 0)
        Fill: =RGBA(0, 0, 0, 0)
        FocusedBorderColor: =Button5_6.BorderColor
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =20
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
        OnSelect: =Set(varGTMOverrideMode, !varGTMOverrideMode)
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =9
        Text: =""
        Width: =20
        ZIndex: =31

    gal_RequiredFieldsRemainingGallery As gallery.galleryVertical:
        BorderColor: =RGBA(166, 166, 166, 1)
        DisabledBorderColor: =gal_RequiredFieldsRemainingGallery.BorderColor
        DisabledFill: =gal_RequiredFieldsRemainingGallery.Fill
        Fill: =RGBA(255, 255, 255, 1)
        HoverBorderColor: =gal_RequiredFieldsRemainingGallery.BorderColor
        HoverFill: =gal_RequiredFieldsRemainingGallery.Fill
        Items: |-
            =If(IsBlank(varCurrentRecord),
            Filter(collFormValues, required = "true" And IsBlank(fieldValue) Or defaultValue = "NULL"), 
            Filter(collFormValues, required = "true" And defaultValue = "NULL"))
        Layout: =Layout.Vertical
        LoadingSpinnerColor: =gal_RequiredFieldsRemainingGallery.BorderColor
        PressedBorderColor: =gal_RequiredFieldsRemainingGallery.BorderColor
        PressedFill: =gal_RequiredFieldsRemainingGallery.Fill
        TemplateSize: =47
        Visible: =false
        Width: =458
        X: =229
        Y: =505
        ZIndex: =37

        Label14 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label14.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label14.BorderColor
            HoverColor: =Label14.Color
            HoverFill: =Label14.Fill
            OnSelect: =Select(Parent)
            PressedBorderColor: =Label14.BorderColor
            PressedColor: =Label14.Color
            PressedFill: =Label14.Fill
            Size: =13
            Text: =ThisItem.fieldValue
            Width: =132
            X: =145
            Y: =5
            ZIndex: =1

        Label14_1 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label14_1.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label14_1.BorderColor
            HoverColor: =Label14_1.Color
            HoverFill: =Label14_1.Fill
            OnSelect: =Select(Parent)
            PressedBorderColor: =Label14_1.BorderColor
            PressedColor: =Label14_1.Color
            PressedFill: =Label14_1.Fill
            Size: =13
            Text: =ThisItem.fieldID
            X: =6
            Y: =6
            ZIndex: =2

        Label14_2 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label14_2.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label14_2.BorderColor
            HoverColor: =Label14_2.Color
            HoverFill: =Label14_2.Fill
            OnSelect: =Select(Parent)
            PressedBorderColor: =Label14_2.BorderColor
            PressedColor: =Label14_2.Color
            PressedFill: =Label14_2.Fill
            Size: =13
            Text: =ThisItem.required
            Width: =58
            X: =277
            Y: =6
            ZIndex: =3

        Label14_3 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label14_3.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label14_3.BorderColor
            HoverColor: =Label14_3.Color
            HoverFill: =Label14_3.Fill
            OnSelect: =Select(Parent)
            PressedBorderColor: =Label14_3.BorderColor
            PressedColor: =Label14_3.Color
            PressedFill: =Label14_3.Fill
            Size: =13
            Text: =ThisItem.defaultValue
            Width: =65
            X: =357
            Y: =5
            ZIndex: =4

        Label14_4 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label14_4.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label14_4.BorderColor
            HoverColor: =Label14_4.Color
            HoverFill: =Label14_4.Fill
            OnSelect: =Select(Parent)
            PressedBorderColor: =Label14_4.BorderColor
            PressedColor: =Label14_4.Color
            PressedFill: =Label14_4.Fill
            Size: =13
            Text: |-
                =Switch(ThisItem.fieldID,
                "InitiativeName", varCurrentRecord.InitiativeName,
                "DarkStatus", varCurrentRecord.DarkStatus,
                "Sponsoring VP", varCurrentRecord.'Sponsoring VP'.'Full Name',
                "Description", varCurrentRecord.Description,
                "Business Owner", varCurrentRecord.'Business Owner'.'Full Name',
                "RequestedLaunchDate", varCurrentRecord.RequestedLaunchDate,
                "Phase", varCurrentRecord.Phase,
                "PreOrderDate", varCurrentRecord.PreOrderDate,
                "SubPhase", varCurrentRecord.SubPhase,
                "GoalKPI", varCurrentRecord.GoalKPI,
                "PreSaleDate", varCurrentRecord.PreSaleDate,
                "Brand", varCurrentRecord.Brand,
                "ShortDescription", varCurrentRecord.ShortDescription,
                "CustomerImpacting", varCurrentRecord.CustomerImpacting,
                "TriageNotes", varCurrentRecord.TriageNotes,
                "GoesOnCalendar", varCurrentRecord.GoesOnCalendar,
                "ReplacingAnExistingProduct", varCurrentRecord.ReplacingAnExistingProduct,
                "NameofExistingProduct", varCurrentRecord.NameofExistingProduct,
                "KeyFeatures", varCurrentRecord.KeyFeatures,
                "DeviceOEM", varCurrentRecord.DeviceOEM,
                "Tier", varCurrentRecord.Tier,
                "DeviceName", varCurrentRecord.DeviceName,
                "Category", varCurrentRecord.Category,
                "Target", varCurrentRecord.Target,
                "MarketingSupportNeeded", varCurrentRecord.MarketingSupportNeeded,
                "IntegratedMarketing", varCurrentRecord.IntegratedMarketing,
                "AudienceSpecificCommunications", varCurrentRecord.AudienceSpecificCommunications,
                "TargetAudienceSegment", varCurrentRecord.TargetAudienceSegment,
                "ExplainIntegratedMarketing", varCurrentRecord.ExplainIntegratedMarketing,
                "ExplainAudienceSpecificCommunications", varCurrentRecord.ExplainAudienceSpecificCommunications,
                "ExplainTargetAudienceSegment", varCurrentRecord.ExplainTargetAudienceSegment,
                "ExpectedMarketingSupport", varCurrentRecord.ExpectedMarketingSupport,
                "PositioningMessaging", varCurrentRecord.PositioningMessaging,
                "SupportPlan", varCurrentRecord.SupportPlan,
                "BillName", varCurrentRecord.BillName,
                "LOBChannelHorizontal", varCurrentRecord.LOBChannelHorizontal,
                "EndDate", varCurrentRecord.EndDate,
                "PRCode", varCurrentRecord.PRCode,
                "Priority", varCurrentRecord.Priority,
                "Situation", varCurrentRecord.Situation,
                "PromoDetailsLocked", varCurrentRecord.PromoDetailsLocked,
                "OfferType", varCurrentRecord.OfferType,
                "DetailsStillOpen", varCurrentRecord.DetailsStillOpen,
                "LimitedTimeOffer", varCurrentRecord.LimitedTimeOffer,
                "PromoCode", varCurrentRecord.PromoCode,
                "CostcoRebateCode", varCurrentRecord.CostcoRebateCode,
                "PJCode", varCurrentRecord.PJCode,
                "TotalOfferSpend", varCurrentRecord.TotalOfferSpend,
                "AnticipatedVolumeTakeRatesTotal", varCurrentRecord.AnticipatedVolumeTakeRatesTotal,
                "IncrementalLiftTotal", varCurrentRecord.IncrementalLiftTotal,
                "AnticipatedVolumeTakeRatesDaily", varCurrentRecord.AnticipatedVolumeTakeRatesDaily,
                "IncrementalLiftDaily", varCurrentRecord.IncrementalLiftDaily,
                "Monitoring", varCurrentRecord.Monitoring,
                "RatePlanRequirements", Concat(varCurrentRecord.RatePlanRequirements,","),
                "VoiceRatePlanRequirements", Concat(varCurrentRecord.VoiceRatePlanRequirements,","),
                "AdditionalEligibilityRequirements", Concat(varCurrentRecord.AdditionalEligibilityRequirements,","),
                "Channels", Concat(varCurrentRecord.Channels,","),
                "CustomerSegment", Concat(varCurrentRecord.CustomerSegment,","),
                "EligibleDevices", varCurrentRecord.EligibleDevices,
                "OtherPromotionsNotStackable", varCurrentRecord.OtherPromotionsNotStackable,
                "OtherLimitationsAndExclusions", varCurrentRecord.OtherLimitationsAndExclusions,
                "MobileInternetPlanRequirements", Concat(varCurrentRecord.MobileInternetPlanRequirements,","),
                "WearablePlanRequirements", Concat(varCurrentRecord.WearablePlanRequirements,","),
                "AddALineTypes", Concat(varCurrentRecord.AddALineTypes,","),
                "NumberOfAddALineRequired", varCurrentRecord.NumberOfAddALineRequired,
                "OfferLimitsConsumerTFB", varCurrentRecord.OfferLimitsConsumerTFB,
                "EmployeeEligible", varCurrentRecord.EmployeeEligible,
                "ProductNotes", varCurrentRecord.ProductNotes,
                "OfferLimitsTFBBAN", varCurrentRecord.OfferLimitsTFBBAN,
                "Market", varCurrentRecord.Market,
                "MAPRestricted", varCurrentRecord.MAPRestricted,
                "LocalMarket", varCurrentRecord.LocalMarket,
                "EmployeeDiscount", varCurrentRecord.EmployeeDiscount,
                "DesiredExecution", varCurrentRecord.DesiredExecution,
                "PurchaseTypeFinancing", Concat(varCurrentRecord.PurchaseTypeFinancing,","),
                "DesiredExecutionExplanation", varCurrentRecord.DesiredExecutionExplanation,
                "JUMPEligible", varCurrentRecord.JUMPEligible,
                "CarrierFreedom", varCurrentRecord.CarrierFreedom,
                "DeviceFulfillmentInScope", Concat(varCurrentRecord.DeviceFulfillmentInScope,","),
                "PromoEligibilityTool", varCurrentRecord.PromoEligibilityTool,
                "ActiveServiceRequired", varCurrentRecord.ActiveServiceRequired,
                "ValidationCheck", varCurrentRecord.ValidationCheck,
                "EligibilityAndExclusions", varCurrentRecord.EligibilityAndExclusions,
                "CustomerExperience", varCurrentRecord.CustomerExperience,
                "SteeringMeetingResults", varCurrentRecord.SteeringMeetingResults,
                "OfferRevisionDescription", varCurrentRecord.OfferRevisionDescription,
                "LastDateToCancel", varCurrentRecord.LastDateToCancel,
                "ForecastedDate", varCurrentRecord.ForecastedDate,
                "EstimatedLaunchDate", varCurrentRecord.EstimatedLaunchDate,
                "CommittedLaunchDate", varCurrentRecord.CommittedLaunchDate,
                "PTLOESWAG", varCurrentRecord.PTLOESWAG,
                "ProductFunctionality", varCurrentRecord.ProductFunctionality,
                "ProductObjectives", varCurrentRecord.ProductObjectives,
                "BeneficiaryLOB", varCurrentRecord.BeneficiaryLOB,
                "BeneficiaryLOBApprover", varCurrentRecord.BeneficiaryLOBApprover.'Full Name',
                "StrategicPillar", varCurrentRecord.StrategicPillar,
                "PriorityQuarter", varCurrentRecord.PriorityQuarter,
                "BusinessBenefit", varCurrentRecord.BusinessBenefit,
                "AnnualGALiftEstimate", varCurrentRecord.AnnualGALiftEstimate,
                "OtherBusinessBenefit", varCurrentRecord.OtherBusinessBenefit,
                "GALiftType", Concat(varCurrentRecord.GALiftType,","),
                "ThreeYearNPV", varCurrentRecord.ThreeYearNPV,
                "DesignPrinciples", varCurrentRecord.DesignPrinciples,
                "KeyAssumptions", varCurrentRecord.KeyAssumptions,
                "Integration", varCurrentRecord.Integration,
                "Day", varCurrentRecord.Day,
                "SystemStack", varCurrentRecord.SystemStack,
                "ValueProposition", varCurrentRecord.ValueProposition,
                "Pitch", varCurrentRecord.Pitch,
                "ReasonToBelieve", varCurrentRecord.ReasonToBelieve,
                "TotalNetAddGoals", varCurrentRecord.TotalNetAddGoals,
                "PlanAndFeatureRequirementsBuild", Concat(varCurrentRecord.PlanAndFeatureRequirementsBuild,","),
                "NumberofCustomersTargeted", varCurrentRecord.NumberofCustomersTargeted,
                "GetOutOfTheRed", varCurrentRecord.GetOutOfTheRed,
                "")
            Width: =170
            X: =434
            Y: =5
            ZIndex: =5

    lbl_ChangeRequestCurrentValue As label:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Size: =13
        Text: =com_FormSection_ChangeRequest_1.CurrentFieldValue
        Visible: =varDevMode
        X: =687
        Y: =53
        ZIndex: =51

    grp_HiddenForceDataPullLabels As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =51

        Label12_4 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label12_4.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label12_4.BorderColor
            HoverColor: =Label12_4.Color
            HoverFill: =Label12_4.Fill
            PressedBorderColor: =Label12_4.BorderColor
            PressedColor: =Label12_4.Color
            PressedFill: =Label12_4.Fill
            Size: =13
            Text: =varCurrentRecord.'Business Owner'.'Full Name'
            Visible: =varDevMode
            Y: =580
            ZIndex: =9

        lbl_BusinessOwnerRecordName As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_BusinessOwnerRecordName.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =35
            HoverBorderColor: =lbl_BusinessOwnerRecordName.BorderColor
            HoverColor: =lbl_BusinessOwnerRecordName.Color
            HoverFill: =lbl_BusinessOwnerRecordName.Fill
            PressedBorderColor: =lbl_BusinessOwnerRecordName.BorderColor
            PressedColor: =lbl_BusinessOwnerRecordName.Color
            PressedFill: =lbl_BusinessOwnerRecordName.Fill
            Size: =13
            Text: =varBusinessOwnerRecord.'Full Name'
            Visible: =varDevMode
            Width: =180
            Y: =730
            ZIndex: =17

        lbl_SponsoringVPRecordName As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_SponsoringVPRecordName.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_SponsoringVPRecordName.BorderColor
            HoverColor: =lbl_SponsoringVPRecordName.Color
            HoverFill: =lbl_SponsoringVPRecordName.Fill
            PressedBorderColor: =lbl_SponsoringVPRecordName.BorderColor
            PressedColor: =lbl_SponsoringVPRecordName.Color
            PressedFill: =lbl_SponsoringVPRecordName.Fill
            Size: =13
            Text: =varSponsorRecord.'Full Name'
            Visible: =varDevMode
            Width: =180
            Y: =661
            ZIndex: =18

        lbl_CreatedByFullName As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_CreatedByFullName.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =35
            HoverBorderColor: =lbl_CreatedByFullName.BorderColor
            HoverColor: =lbl_CreatedByFullName.Color
            HoverFill: =lbl_CreatedByFullName.Fill
            PressedBorderColor: =lbl_CreatedByFullName.BorderColor
            PressedColor: =lbl_CreatedByFullName.Color
            PressedFill: =lbl_CreatedByFullName.Fill
            Size: =13
            Text: =varCurrentRecord.'Created By'.'Full Name'
            Visible: =varDevMode
            Width: =180
            Y: =467
            ZIndex: =19

        lbl_BenLOBAppNameLookUp As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_BenLOBAppNameLookUp.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_BenLOBAppNameLookUp.BorderColor
            HoverColor: =lbl_BenLOBAppNameLookUp.Color
            HoverFill: =lbl_BenLOBAppNameLookUp.Fill
            PressedBorderColor: =lbl_BenLOBAppNameLookUp.BorderColor
            PressedColor: =lbl_BenLOBAppNameLookUp.Color
            PressedFill: =lbl_BenLOBAppNameLookUp.Fill
            Size: =13
            Text: =First(Search(Users, LookUp(collFormValues, fieldID="BeneficiaryLOBApprover").fieldValue, "fullname")).'Full Name'
            Visible: =varDevMode
            Width: =207
            Y: =632
            ZIndex: =20

        lbl_CurrentRecordSponsorVPFullName As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_CurrentRecordSponsorVPFullName.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =35
            HoverBorderColor: =lbl_CurrentRecordSponsorVPFullName.BorderColor
            HoverColor: =lbl_CurrentRecordSponsorVPFullName.Color
            HoverFill: =lbl_CurrentRecordSponsorVPFullName.Fill
            PressedBorderColor: =lbl_CurrentRecordSponsorVPFullName.BorderColor
            PressedColor: =lbl_CurrentRecordSponsorVPFullName.Color
            PressedFill: =lbl_CurrentRecordSponsorVPFullName.Fill
            Size: =13
            Text: =varCurrentRecord.'Sponsoring VP'.'Full Name'
            Visible: =varDevMode
            Width: =180
            Y: =502
            ZIndex: =21

        lbl_BusinessOwnerName As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_BusinessOwnerName.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_BusinessOwnerName.BorderColor
            HoverColor: =lbl_BusinessOwnerName.Color
            HoverFill: =lbl_BusinessOwnerName.Fill
            PressedBorderColor: =lbl_BusinessOwnerName.BorderColor
            PressedColor: =lbl_BusinessOwnerName.Color
            PressedFill: =lbl_BusinessOwnerName.Fill
            Size: =13
            Text: =LookUp(collFormValues, fieldID = "Business Owner").fieldValue
            Visible: =varDevMode
            Y: =615
            ZIndex: =22

        lbl_SponsoringVPName As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_SponsoringVPName.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_SponsoringVPName.BorderColor
            HoverColor: =lbl_SponsoringVPName.Color
            HoverFill: =lbl_SponsoringVPName.Fill
            PressedBorderColor: =lbl_SponsoringVPName.BorderColor
            PressedColor: =lbl_SponsoringVPName.Color
            PressedFill: =lbl_SponsoringVPName.Fill
            Size: =13
            Text: =LookUp(collFormValues, fieldID = "Sponsoring VP").fieldValue
            Visible: =varDevMode
            Y: =650
            ZIndex: =23

        lbl_SponsoringVPNameRecord As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_SponsoringVPNameRecord.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_SponsoringVPNameRecord.BorderColor
            HoverColor: =lbl_SponsoringVPNameRecord.Color
            HoverFill: =lbl_SponsoringVPNameRecord.Fill
            PressedBorderColor: =lbl_SponsoringVPNameRecord.BorderColor
            PressedColor: =lbl_SponsoringVPNameRecord.Color
            PressedFill: =lbl_SponsoringVPNameRecord.Fill
            Size: =13
            Text: =com_FormSection_1.SelectedSponsorVP.lastname
            Visible: =varDevMode
            X: =17
            Y: =777
            ZIndex: =24

        lbl_BusinessOwnerNameRecord As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_BusinessOwnerNameRecord.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_BusinessOwnerNameRecord.BorderColor
            HoverColor: =lbl_BusinessOwnerNameRecord.Color
            HoverFill: =lbl_BusinessOwnerNameRecord.Fill
            PressedBorderColor: =lbl_BusinessOwnerNameRecord.BorderColor
            PressedColor: =lbl_BusinessOwnerNameRecord.Color
            PressedFill: =lbl_BusinessOwnerNameRecord.Fill
            Size: =13
            Text: =com_FormSection_1.SelectedBusinessOwner.lastname
            Visible: =varDevMode
            X: =15
            Y: =632
            ZIndex: =25

        Label12 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label12.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label12.BorderColor
            HoverColor: =Label12.Color
            HoverFill: =Label12.Fill
            PressedBorderColor: =Label12.BorderColor
            PressedColor: =Label12.Color
            PressedFill: =Label12.Fill
            Size: =13
            Text: =LookUp(collFormValues, fieldID = "LimitedTimeOffer").fieldValue
            Visible: =varDevMode
            Y: =810
            ZIndex: =27

        Label12_5 As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =Label12_5.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =Label12_5.BorderColor
            HoverColor: =Label12_5.Color
            HoverFill: =Label12_5.Fill
            PressedBorderColor: =Label12_5.BorderColor
            PressedColor: =Label12_5.Color
            PressedFill: =Label12_5.Fill
            Size: =13
            Text: =varCurrentRecord.Phase
            Visible: =varDevMode
            Y: =745
            ZIndex: =30

        lbl_LastRecordSubmitInitiativeName As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_LastRecordSubmitInitiativeName.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =71
            HoverBorderColor: =lbl_LastRecordSubmitInitiativeName.BorderColor
            HoverColor: =lbl_LastRecordSubmitInitiativeName.Color
            HoverFill: =lbl_LastRecordSubmitInitiativeName.Fill
            PressedBorderColor: =lbl_LastRecordSubmitInitiativeName.BorderColor
            PressedColor: =lbl_LastRecordSubmitInitiativeName.Color
            PressedFill: =lbl_LastRecordSubmitInitiativeName.Fill
            Size: =13
            Text: =varLastRecordSubmit.InitiativeName
            Visible: =varDevMode
            Width: =165
            Y: =887
            ZIndex: =32

        lbl_BrandValue As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_BrandValue.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_BrandValue.BorderColor
            HoverColor: =lbl_BrandValue.Color
            HoverFill: =lbl_BrandValue.Fill
            PressedBorderColor: =lbl_BrandValue.BorderColor
            PressedColor: =lbl_BrandValue.Color
            PressedFill: =lbl_BrandValue.Fill
            Size: =13
            Text: =varBrand//DateValue(LookUp(collFormValues, fieldID="RequestedLaunchDate").fieldValue)
            Visible: =varDevMode
            X: =494
            Y: =60
            ZIndex: =33

        lbl_CustomerSegmentFieldValue As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_CustomerSegmentFieldValue.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_CustomerSegmentFieldValue.BorderColor
            HoverColor: =lbl_CustomerSegmentFieldValue.Color
            HoverFill: =lbl_CustomerSegmentFieldValue.Fill
            PressedBorderColor: =lbl_CustomerSegmentFieldValue.BorderColor
            PressedColor: =lbl_CustomerSegmentFieldValue.Color
            PressedFill: =lbl_CustomerSegmentFieldValue.Fill
            Size: =13
            Text: =LookUp(collFormValues, fieldID = "CustomerSegment").fieldValue
            Visible: =varDevMode
            Y: =653
            ZIndex: =36

        lbl_CustomerSegmentDefaultValue As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_CustomerSegmentDefaultValue.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            HoverBorderColor: =lbl_CustomerSegmentDefaultValue.BorderColor
            HoverColor: =lbl_CustomerSegmentDefaultValue.Color
            HoverFill: =lbl_CustomerSegmentDefaultValue.Fill
            PressedBorderColor: =lbl_CustomerSegmentDefaultValue.BorderColor
            PressedColor: =lbl_CustomerSegmentDefaultValue.Color
            PressedFill: =lbl_CustomerSegmentDefaultValue.Fill
            Size: =13
            Text: =LookUp(collFormValues, fieldID = "CustomerSegment").defaultValue
            Visible: =varDevMode
            Y: =703
            ZIndex: =38

    grp_DevModeButtons As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =51

        btn_PatchSponsorsToAccessTeams As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(184, 0, 0, 1)
            FocusedBorderColor: =btn_PatchSponsorsToAccessTeams.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =Concurrent(
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varSponsorRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varEditTeamTemplateID
                  }
                ),
                
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varBusinessOwnerRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varEditTeamTemplateID
                  }
                ),
                
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varCurrentUserRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varEditTeamTemplateID
                  }
                ),
                
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varBeneficiaryLOBApproverRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varEditTeamTemplateID
                  }
                ),
                
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varSponsorRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varReadOnlyTeamTemplateID
                  }
                ),
                
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varBusinessOwnerRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varReadOnlyTeamTemplateID
                  }
                ),
                
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varCurrentUserRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varReadOnlyTeamTemplateID
                  }
                ),
                
                'CDS-GtmEntries'.AddUserToAccessTeamTemplate(varBeneficiaryLOBApproverRecord.User, {
                    '@odata.type': "Microsoft.Dynamics.CRM.cat_gtmentry",
                    cat_gtmentryid: varCurrentRecord.gtmEntry
                  },
                {
                    '@odata.type': "Microsoft.Dynamics.CRM.teamtemplate",
                    teamtemplateid: varReadOnlyTeamTemplateID
                  }
                ));
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Patch Permissions"
            Visible: =varDevMode
            Width: =150
            X: =1160
            Y: =24
            ZIndex: =4

        btn_AssignBusinessUnit As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(184, 0, 0, 1)
            FocusedBorderColor: =btn_AssignBusinessUnit.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =Set(varLastRecordSubmit, LookUp(gtmEntries, gtmEntry = varLastRecordSubmit.gtmEntry));
                Set(varConfirmExitMessage, false);
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="AssignBusinessUnit"
            Visible: =varDevMode
            Width: =150
            X: =1160
            ZIndex: =6

        Button1_2 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(168, 0, 0, 1)
            FocusedBorderColor: =Button1_2.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =UpdateContext({showLoader: true})
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="ResetLoadingWheel"
            Visible: =varDevMode
            Width: =150
            X: =990
            ZIndex: =13

        btn_DevMode_2 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            Color: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =btn_DevMode_2.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =33
            HoverBorderColor: =RGBA(179, 179, 179, 1)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =RGBA(204, 204, 204, 1)
            OnSelect: =Set(varDevMode, !varDevMode)
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="DM"
            Visible: =varCurrentUserSecurityRole = "Administrator"
            Width: =38
            Y: =1045
            ZIndex: =34

        btn_CCcolGTMEntries As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(168, 0, 0, 1)
            FocusedBorderColor: =btn_CCcolGTMEntries.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: =ClearCollect(colGTMEntries, First(gtmEntries))
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="colGTMEntries"
            Visible: =varDevMode
            Width: =150
            X: =990
            Y: =24
            ZIndex: =35

    grp_SaveWarning As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =51

        com_Dialogue_SaveWarning_1 As com_Dialogue:
            Button1Text: ="Clear Changes"
            Button2Text: ="Continue Editing"
            DialogueSubText: =""
            DialogueSubText2: ="If you leave now, you will lose any changes that have not yet been saved. "
            DialogueTextTitle: ="Do you want to save your changes?"
            InitiativeType: =varInitiativeType
            NavigateToScreen: =Project_Picker_Screen
            NewOrDraft: =varIsNewInitiative Or varIsDraftInitiative
            ResetComponent: =com_Dialogue_SaveWarning_1.RightButtonAction Or varSummaryFormMode Or varShowSaveDialogue
            ShowButtons: =false
            Visible: =varSaveChangesDialogue
            ZIndex: =43

        btn_SaveWarningDialogueClearChanges_1 As button:
            BorderColor: =ColorFade(btn_SaveWarningDialogueClearChanges_1.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: =If(IsEmpty(DataCardValue37.SelectedItems) Or IsEmpty(DataCardValue36.SelectedItems) Or IsEmpty(DataCardValue31.SelectedItems), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(226, 0, 116, 1)
            FocusedBorderColor: =btn_SaveWarningDialogueClearChanges_1.BorderColor
            FocusedBorderThickness: =1
            Font: ='Open Sans'
            FontWeight: =FontWeight.Semibold
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_SaveWarningDialogueClearChanges_1.Fill, -20%)
            OnSelect: |-
                =UpdateContext({showLoader: false});
                UpdateContext({varLoadingDataMessage: "Clearing Changes"});
                UpdateContext({varSaveChangesDialogue: false});
                
                If(varIsNewInitiative, 
                    Navigate(Project_Picker_Screen, ScreenTransition.None),
                    If(varIsDraftInitiative, 
                        ClearCollect(collFormValues, Filter(ComponentFieldDetails, formID = Text(varCurrentRecord.InitiativeType), isOnIntake = true)), 
                        ClearCollect(collFormValues, Filter(ComponentFieldDetails, formID = Text(varCurrentRecord.InitiativeType)))));
                
                Concurrent(
                Reset(com_FormSection_1),
                Reset(com_FormSection_2),
                Reset(com_FormSection_3),
                Reset(com_FormSection_4),
                Reset(com_FormSection_5)
                );
                
                UpdateContext({showLoader: true});
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =11
            Text: ="Clear Changes"
            Visible: =varSaveChangesDialogue
            Width: =150
            X: =App.Width / 2 - 125 - 75
            Y: =570
            ZIndex: =44

        btn_SaveWarningDialogueContinueEditing_1 As button:
            BorderColor: =ColorFade(btn_SaveWarningDialogueContinueEditing_1.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: =If(IsEmpty(DataCardValue37.SelectedItems) Or IsEmpty(DataCardValue36.SelectedItems) Or IsEmpty(DataCardValue31.SelectedItems), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(226, 0, 116, 1)
            FocusedBorderColor: =btn_SaveWarningDialogueContinueEditing_1.BorderColor
            FocusedBorderThickness: =1
            Font: ='Open Sans'
            FontWeight: =FontWeight.Semibold
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_SaveWarningDialogueContinueEditing_1.Fill, -20%)
            OnSelect: |-
                =UpdateContext({varSaveChangesDialogue: false});
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =11
            Text: ="Continue Editing"
            Visible: =varSaveChangesDialogue
            Width: =150
            X: =App.Width / 2 + 125 - 75
            Y: =570
            ZIndex: =45

        btn_LeftNavSaveWarning_1 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =btn_LeftNavSaveWarning_1.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =App.Height
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =UpdateContext({varSaveChangesDialogue: true})
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =15
            Text: =""
            Visible: =com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged
            Width: =com_NavLeft_Details.Width
            ZIndex: =46

        btn_TopNavSaveWarning_1 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =btn_TopNavSaveWarning_1.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =com_NavTop_5.Height
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =UpdateContext({varSaveChangesDialogue: true})
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =15
            Text: =""
            Visible: =com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged
            Width: =App.Width
            ZIndex: =47

    ctr_SubmitCompleteDialogue As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =350
        Visible: =varAddAttachmentDialogue
        Width: =770
        X: =App.Width/2 - ctr_SubmitCompleteDialogue.Width/2
        Y: =App.Height/2 - ctr_SubmitCompleteDialogue.Height/2
        ZIndex: =52

        HtmlText4_1 As htmlViewer:
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Parent.Height
            HoverBorderColor: =HtmlText4_1.BorderColor
            HtmlText: |-
                ="<div style='margin:0px;width:"& HtmlText4_1.Width - 35 &"px;height:"& HtmlText4_1.Height - 35 &"px;background-color:#;box-shadow:0 1px 10px 15px  #ccc; border-radius:15px'></div>"
            PressedBorderColor: =HtmlText4_1.BorderColor
            Width: =Parent.Width
            ZIndex: =1

        Button29 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =3
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(237, 237, 237, 1)
            FocusedBorderColor: =Button29.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =Parent.Height - 30
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =15
            RadiusBottomRight: =15
            RadiusTopLeft: =15
            RadiusTopRight: =15
            Size: =15
            Text: =""
            Width: =740
            ZIndex: =2

        btn_Button_Done As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =DarkGrey
            DisabledColor: =White
            DisabledFill: =Grey
            Fill: =Magenta
            FocusedBorderColor: =btn_Button_Done.BorderColor
            FocusedBorderThickness: =1
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(Magenta, -20%)
            OnSelect: |
                =Navigate(Project_Picker_Screen, Transition.None);
                Set(varIsNewInitiative, false);
                
                UpdateContext({varLoadingDataMessage: "Navigating to Initiatives List"});
                UpdateContext({showLoader:false});
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =Text3Size
            Text: ="No"
            Visible: =!(Text(varDraft) = "Yes")
            Width: =180
            X: =Button29.Width / 2 - (btn_Button_Done.Width / 2) + 120
            Y: =lbl_Attachments_Header.Y + lbl_Attachments_Header.Height + 180
            ZIndex: =3

        btn_Button_Upload As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =DarkGrey
            DisabledColor: =White
            DisabledFill: =Grey
            Fill: =Magenta
            FocusedBorderColor: =btn_Button_Upload.BorderColor
            FocusedBorderThickness: =1
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(Magenta, -20%)
            OnSelect: |-
                =//Set(varCurrentRecord, varLastRecordSubmit);
                UpdateContext({showLoader:true});
                UpdateContext({varLoadingDataMessage: "Navigating to Attachments Screen"});
                Set(varInitiaitveUpdated, true);
                Set(varAddAttachmentDialogue, false);
                Set(varBlurBackground, false);
                
                
                If(varIsNewInitiative, Set(varCurrentRecord, LookUp(gtmEntries, gtmEntry = varLastRecordSubmit.gtmEntry)), Set(varCurrentRecord, LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry)));
                Set(varIsDraftInitiative, false);
                
                Clear(colStageApprovalUsers);
                
                Set(varIsNewInitiative, false);
                Navigate(Attachments_Screen, Transition.None);
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =Text3Size
            Text: ="Yes"
            Visible: =!(Text(varDraft) = "Yes")
            Width: =180
            X: =Button29.Width / 2 - (btn_Button_Upload.Width / 2) - 120
            Y: =lbl_Attachments_Header.Y + lbl_Attachments_Header.Height + 180
            ZIndex: =4

        lbl_ProjectName As label:
            Align: =Center
            AutoHeight: =true
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =DarkGray
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisplayMode: =DisplayMode.View
            FocusedBorderColor: =lbl_ProjectName.BorderColor
            FocusedBorderThickness: =4
            Font: =FontStyle
            FontWeight: =Semibold
            HoverBorderColor: =lbl_ProjectName.BorderColor
            HoverColor: =lbl_ProjectName.Color
            HoverFill: =lbl_ProjectName.Fill
            PressedBorderColor: =lbl_ProjectName.BorderColor
            PressedColor: =lbl_ProjectName.Color
            PressedFill: =lbl_ProjectName.Fill
            Text: =Concatenate(Coalesce(Text(varCurrentRecord.InitiativeTypeGroup), Text(varLastRecordSubmit.InitiativeTypeGroup)), " > ", Coalesce(Text(varCurrentRecord.InitiativeType), Text(varLastRecordSubmit.InitiativeType)))
            VerticalAlign: =VerticalAlign.Bottom
            Width: =Button29.Width
            Y: =lbl_Attachments_SubHeader.Y + lbl_Attachments_SubHeader.Height
            ZIndex: =5

        lbl_Attachments_SubHeader As label:
            Align: =Center
            AutoHeight: =true
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =DarkGrey
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisplayMode: =DisplayMode.View
            FocusedBorderColor: =lbl_Attachments_SubHeader.BorderColor
            FocusedBorderThickness: =4
            Font: =FontStyle
            FontWeight: =FontWeight.Bold
            Height: =Text1Height
            HoverBorderColor: =lbl_Attachments_SubHeader.BorderColor
            HoverColor: =lbl_Attachments_SubHeader.Color
            HoverFill: =lbl_Attachments_SubHeader.Fill
            PaddingTop: =10
            PressedBorderColor: =lbl_Attachments_SubHeader.BorderColor
            PressedColor: =lbl_Attachments_SubHeader.Color
            PressedFill: =lbl_Attachments_SubHeader.Fill
            Size: =20
            Text: =Coalesce(varCurrentRecord.InitiativeName,varLastRecordSubmit.InitiativeName, "Your Initiaitive")
            Width: =Button29.Width
            Y: =lbl_Attachments_Header.Y + lbl_Attachments_Header.Height
            ZIndex: =6

        lbl_Attachments_Header As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =lbl_Attachments_Header.BorderColor
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =70
            HoverBorderColor: =lbl_Attachments_Header.BorderColor
            HoverColor: =lbl_Attachments_Header.Color
            HoverFill: =lbl_Attachments_Header.Fill
            PaddingBottom: =10
            PressedBorderColor: =lbl_Attachments_Header.BorderColor
            PressedColor: =lbl_Attachments_Header.Color
            PressedFill: =lbl_Attachments_Header.Fill
            Size: =20
            Text: =If((Text(varDraft) = "Yes"), "Your Initiative Draft has been Successfully Saved!", "Your Initiative has been Successfully Submitted!")
            VerticalAlign: =VerticalAlign.Bottom
            Width: =Button29.Width
            ZIndex: =7

        btn_OK As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =DarkGrey
            DisabledColor: =White
            DisabledFill: =Grey
            Fill: =Magenta
            FocusedBorderColor: =btn_OK.BorderColor
            FocusedBorderThickness: =1
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(Magenta, -20%)
            OnSelect: |-
                =Navigate(Project_Picker_Screen, Transition.None);
                Set(varIsNewInitiative, false);
                Set(varAddAttachmentDialogue, false);
                Set(varBlurBackground, false);
                UpdateContext({varIsDraft: false});
                UpdateContext({showLoader:true});
                UpdateContext({varLoadingDataMessage: "Navigating to Initiatives List"});
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =Text3Size
            Text: ="OK"
            Visible: =Text(varDraft) = "Yes"
            Width: =180
            X: =Button29.Width / 2 - (btn_OK.Width / 2)
            Y: =lbl_ProjectName.Y + lbl_ProjectName.Height + 40
            ZIndex: =8

        lbl_ProjectName_1 As label:
            Align: =Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =Magenta
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisplayMode: =DisplayMode.View
            FocusedBorderColor: =lbl_ProjectName_1.BorderColor
            FocusedBorderThickness: =4
            Font: =FontStyle
            Height: =50
            HoverBorderColor: =lbl_ProjectName_1.BorderColor
            HoverColor: =lbl_ProjectName_1.Color
            HoverFill: =lbl_ProjectName_1.Fill
            PressedBorderColor: =lbl_ProjectName_1.BorderColor
            PressedColor: =lbl_ProjectName_1.Color
            PressedFill: =lbl_ProjectName_1.Fill
            Size: =16
            Text: ="Do you want to load attachments?"
            Visible: =!(Text(varDraft) = "Yes")
            Width: =Button29.Width
            Y: =lbl_Attachments_Header.Y + lbl_Attachments_Header.Height + 115
            ZIndex: =9

    btn_MoveToNextBPFStage As button:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(105, 121, 126, 1)
        FocusedBorderColor: =btn_MoveToNextBPFStage.BorderColor
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Bold
        Height: =20
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
        OnSelect: |-
            =Set(BpfInstance, LookUp(ORBIT_Initiative_Approval_Process, Cat_Gtmentry.gtmEntry = varLastRecordSubmit.gtmEntry)); //get BPF instance from Orbit_Initiative_Approval_Process Entity
            ClearCollect(BpfStages, 'CDS-GtmEntries'.GetBPFActivePath(BpfInstance.ORBIT_Initiative_Approval_Process).value); //get active path stages from custom API connector
            Set(varBPFNewStageID, LookUp(BpfStages, stagename = "New").processstageid);
            Set(varBPFNewStageRecord, LookUp('Process Stages', 'Process Stage' = GUID(varBPFNewStageID)));
            Patch(ORBIT_Initiative_Approval_Process, BpfInstance, {'Active Stage': varBPFNewStageRecord});
        PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =10
        Text: ="Set BPF Stage"
        Visible: =varDevMode
        Width: =150
        X: =1033
        Y: =80
        ZIndex: =53

    grp_ChangeRequest As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =53

        btn_ChangeRequest As button:
            BorderColor: =ColorFade(btn_ChangeRequest.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
                =DisplayMode.Edit
                //If(BDL_RequiredFields_Number.Text = "0",DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =Magenta
            FocusedBorderColor: =btn_ChangeRequest.BorderColor
            FocusedBorderThickness: =1
            Font: ='Open Sans'
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_ChangeRequest.Fill, -20%)
            OnSelect: |-
                =ClearCollect(colChangeRequestValues, Filter(collFormValues, changeRequest = true));
                ClearCollect(colChangeRequestValuesAll, Filter(collFormValues, changeRequest = false)); 
                ClearCollect(colChangeRequestFormValues, colChangeRequestValues);
                Reset([@com_FormSection_ChangeRequest_1]);
                /*
                UpdateContext({varChangeRequestOptions: "Please Select*"&Concat(colChangeRequestValues, label&"*")&"Other"});
                UpdateContext({varChangeRequestOptionsAll: "Please Select*"&Concat(colChangeRequestValuesAll, label&"*")});
                UpdateContext({varChangeRequestOptionsAll: Left(varChangeRequestOptionsAll, Len(varChangeRequestOptionsAll) - 1)});
                */
                
                UpdateContext({varChangeRequestOptions: "Please Select*"&Concat(colChangeRequestValues, label&"*")});
                //UpdateContext({varChangeRequestOptionsAll: "Please Select*"&Concat(colChangeRequestValuesAll, label&"*")});
                UpdateContext({varChangeRequestOptions: Left(varChangeRequestOptions, Len(varChangeRequestOptions) - 1)});
                
                ForAll(colChangeRequestValues, 
                Patch(colChangeRequestFormValues, LookUp(colChangeRequestFormValues, fieldID = colChangeRequestValues[@fieldID]), {column: 1, row: 3, width: 2})
                );
                
                ForAll(colChangeRequestValues, 
                Patch(colChangeRequestFormValues, LookUp(colChangeRequestFormValues, fieldID = colChangeRequestValues[@fieldID]), {height: If(colChangeRequestValues[@height] > 4, 4, colChangeRequestValues[@height])})
                );
                
                ForAll(colChangeRequestValues, 
                    Patch(colChangeRequestFormValues, Defaults(colChangeRequestFormValues), {label: colChangeRequestValues[@label]&"*", inputTypeVal: colChangeRequestValues[@inputTypeVal], column: 3, row: 3, height: If(colChangeRequestValues[@height] > 4, 4, colChangeRequestValues[@height]), width: 2, charLimit: colChangeRequestValues[@charLimit], subTextVal: colChangeRequestValues[@subTextVal], fieldID: colChangeRequestValues[@fieldID], optionSet: colChangeRequestValues[@optionSet], hintText: colChangeRequestValues[@hintText], defaultValue: "NULL"}));
                
                Patch(colChangeRequestFormValues, Defaults(colChangeRequestFormValues), {label: "Approving Director*", inputTypeVal: "peoplepicker", column: 3, row: 2, height: 1, width: 2, charLimit: "", subTextVal:"Select Approving Director", fieldID: "ChangeRequestApprover"});
                
                Patch(colChangeRequestFormValues, Defaults(colChangeRequestFormValues), {label: "Request Reason*", inputTypeVal: "multiline", column: 1, height: 2, width: 4, charLimit: 500, subTextVal:"Characters Remaining: ", fieldID: "ChangeRequestJustification", hintText: "Please describe the reason for requesting this change. eg. ""Requesting Cancellation"""});
                
                Patch(colChangeRequestFormValues, Defaults(colChangeRequestFormValues), {label: "Field to Change*", inputTypeVal: "dropdown", column: 1, row: 2, height: 1, width: 2, charLimit: "", subTextVal:"Select Field to Request Be Updated", fieldID: "ChangeRequestField", optionSet: varChangeRequestOptions});
                
                //Patch(colChangeRequestFormValues, Defaults(colChangeRequestFormValues), {label: "Field to Change - Other", inputTypeVal: "dropdown", column: 1, row: 3, height: 1, width: 2, charLimit: "", subTextVal:"Select Field to Request Be Updated", fieldID: "ChangeRequestFieldOther", optionSet: varChangeRequestOptionsAll});
                
                Patch(colChangeRequestFormValues, Defaults(colChangeRequestFormValues), {label: "Other*", inputTypeVal: "multiline", row: 4, column: 1, height: 2, width: 2, charLimit: 5000, subTextVal:"Characters Remaining: ", fieldID: "Other", changeRequest: true, hintText: "Please enter the CURRENT value of the field you are requesting the change for."});
                Patch(colChangeRequestFormValues, Defaults(colChangeRequestFormValues), {label: "Other*", inputTypeVal: "multiline", row: 4, column: 3, height: 2, width: 2, charLimit: 5000,subTextVal:"Characters Remaining: ", fieldID: "Other", hintText: "Please enter the NEW value of the field you are requesting the change for."});
                
                Set(varBlurBackground, true);
                UpdateContext({varShowChangeRequestForm: true})
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Change Request"
            Visible: =(varIsNewInitiative Or varIsDraftInitiative Or varRecordEditTrue Or varDevMode Or varRecordEditPermissions) And !IsEmpty(Filter(collFormValues, changeRequest = true))
            Width: =135
            X: =1572
            Y: =110
            ZIndex: =40

        com_FormSection_ChangeRequest_1 As com_FormSection_ChangeRequest:
            CheckRequiredFields: =false
            ComponentHeight: =900
            ComponentHeightControlValue: =If(!isSectionVisible, com_FormSection_ChangeRequest_1.ComponentHeight, 40)
            ComponentWidth: =1000
            CRFieldID: =LookUp(colChangeRequestFormValues, label = com_FormSection_ChangeRequest_1.CRField&"*" And IsBlank(changeRequest)).fieldID
            CRNewValue: =LookUp(colChangeRequestFormValues, fieldID = com_FormSection_ChangeRequest_1.CRFieldID And changeRequest = Blank()).fieldValue
            Height: =com_FormSection_ChangeRequest_1.ComponentHeight
            inputValues: =varCurrentRecord
            Visible: =varShowChangeRequestForm
            Width: =com_FormSection_ChangeRequest_1.ComponentWidth
            X: =App.Width/2 - Self.Width/2
            Y: =App.Height/2-Self.Height/2
            ZIndex: =42

        btn_ChangeRequest_1 As button:
            BorderColor: =ColorFade(btn_ChangeRequest_1.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
                =DisplayMode.Edit
                //If(BDL_RequiredFields_Number.Text = "0",DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =Magenta
            FocusedBorderColor: =btn_ChangeRequest_1.BorderColor
            FocusedBorderThickness: =1
            Font: ='Open Sans'
            FontWeight: =FontWeight.Semibold
            Height: =41
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_ChangeRequest_1.Fill, -20%)
            OnSelect: |-
                =Set(varBlurBackground, false);
                UpdateContext({varShowChangeRequestForm: false})
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Cancel"
            Tooltip: ="Cancel Change Request."
            Visible: =varShowChangeRequestForm
            Width: =179
            X: =771
            Y: =888
            ZIndex: =48

        btn_ChangeRequest_2 As button:
            BorderColor: =ColorFade(btn_ChangeRequest_2.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: =If(!IsBlank(com_FormSection_ChangeRequest_1.CRReason) And !IsBlank(com_FormSection_ChangeRequest_1.CRField) And !IsBlank(com_FormSection_ChangeRequest_1.CRNewValue) And !IsBlank(com_FormSection_ChangeRequest_1.SelectedUserID), DisplayMode.Edit, DisplayMode.Disabled)
            Fill: =Magenta
            FocusedBorderColor: =btn_ChangeRequest_2.BorderColor
            FocusedBorderThickness: =1
            Font: ='Open Sans'
            FontWeight: =FontWeight.Semibold
            Height: =41
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_ChangeRequest_2.Fill, -20%)
            OnSelect: |
                =UpdateContext({varChangeRequest: true});
                UpdateContext({varCRApprovalUser: LookUp(Users, User = GUID(com_FormSection_ChangeRequest_1.SelectedUserID))});
                UpdateContext({varCRReason: LookUp(colChangeRequestFormValues, fieldID = "ChangeRequestJustification").fieldValue});
                UpdateContext({varCRField: LookUp(colChangeRequestFormValues, fieldID = "ChangeRequestField").fieldValue});
                //UpdateContext({varCRFieldLabel: LookUp(colChangeRequestFormValues, fieldID = "ChangeRequestField").fieldValue});
                UpdateContext({varCRNewValue: LookUp(colChangeRequestFormValues, label = varCRField&"*" And IsBlank(changeRequest)).fieldValue});
                UpdateContext({varCROriginalValue: LookUp(collFormValues, label = varCRField&"*").fieldValue});
                UpdateContext({varCRFieldID: LookUp(colChangeRequestFormValues, label = varCRField&"*" And IsBlank(changeRequest)).fieldID});
                UpdateContext({varCRFieldIDOther: LookUp(colChangeRequestFormValues, fieldID = "Other" And IsBlank(changeRequest)).fieldValue});
                
                If(varCRField = "Phase",
                Set(varPhase, 
                        Switch(varCRNewValue,
                            "New", Phase.New,
                            "Concept", Phase.Concept,
                            "Assessment", Phase.Assessment,
                            "Requirements", Phase.Requirements,
                            "Build", Phase.Build,
                            "Approved", Phase.Approved,
                            "On Hold", Phase.'On Hold',
                            "Launched", Phase.Launched,
                            "Canceled", Phase.Canceled,
                            "Declined", Phase.Declined,
                            "Moved To Project", Phase.'Moved To Project',
                            "Pre-Concept", Phase.'Pre-Concept')));
                
                ClearCollect(colFormValuesPatch, Filter(colChangeRequestFormValues, changeRequest = Blank()));
                
                If(com_FormSection_ChangeRequest_1.CRFieldID = "Other", 
                Select(btn_Patch_CR),
                Select(btn_SetVariables));
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Submit Request"
            Tooltip: =If(Self.DisplayMode = DisplayMode.Disabled, "Please fill out all required fields.", "Submit Change Request.")
            Visible: =varShowChangeRequestForm
            Width: =179
            X: =970
            Y: =888
            ZIndex: =49

    grp_PatchButtons As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =53

        btn_LogToChangeHistory As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(105, 121, 126, 1)
            FocusedBorderColor: =btn_LogToChangeHistory.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =Set(varOrbitAuditHistoriesDefaults, Defaults(OrbitAuditHistories));
                //Text(DateAdd(DtP_IntakeDt_From_1.SelectedDate, -8, Hours), "mm/dd/yyyy")
                Concurrent(
                
                // **************** Dates **************************
                
                If(!IsBlank(LookUp(collFormValues, fieldID="PreOrderDate").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Pre-Order Date",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.PreOrderDate, "[$-en-US]mm/dd/yyyy"),
                NewValue: Text(DateValue(LookUp(collFormValues, fieldID="PreOrderDate").fieldValue), "[$-en-US]mm/dd/yyyy")})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="PreSaleDate").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Pre-Sale Date",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.PreSaleDate, "[$-en-US]mm/dd/yyyy"),
                NewValue: Text(DateValue(LookUp(collFormValues, fieldID="PreSaleDate").fieldValue), "[$-en-US]mm/dd/yyyy")})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="RequestedLaunchDate").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Requested Launch Date",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.RequestedLaunchDate, "[$-en-US]mm/dd/yyyy"),
                NewValue: Text(DateValue(LookUp(collFormValues, fieldID="RequestedLaunchDate").fieldValue), "[$-en-US]mm/dd/yyyy")})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="ForecastedDate").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Forecasted Date",
                GTMEntry: varCurrentRecord,
                OldValue: Text((varCurrentRecord.ForecastedDate), "[$-en-US]mm/dd/yyyy"),
                NewValue: Text(DateValue(LookUp(collFormValues, fieldID="ForecastedDate").fieldValue), "[$-en-US]mm/dd/yyyy")})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="CommittedLaunchDate").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Committed Launch Date",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.CommittedLaunchDate, "[$-en-US]mm/dd/yyyy"),
                NewValue: Text(DateValue(LookUp(collFormValues, fieldID="CommittedLaunchDate").fieldValue), "[$-en-US]mm/dd/yyyy")})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="EndDate").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "End Date",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.EndDate, "[$-en-US]mm/dd/yyyy"),
                NewValue: Text(DateValue(LookUp(collFormValues, fieldID="EndDate").fieldValue), "[$-en-US]mm/dd/yyyy")})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="EstimatedLaunchDate").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Estimated Launch Date",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.EstimatedLaunchDate, "[$-en-US]mm/dd/yyyy"),
                NewValue: Text(DateValue(LookUp(collFormValues, fieldID="EstimatedLaunchDate").fieldValue), "[$-en-US]mm/dd/yyyy")})),
                
                // **************** Text **************************
                
                If(!IsBlank(LookUp(collFormValues, fieldID="Description").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Description",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.Description),
                NewValue: Text(LookUp(collFormValues, fieldID="Description").fieldValue)})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="ShortDescription").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Short Description",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.ShortDescription),
                NewValue: Text(LookUp(collFormValues, fieldID="ShortDescription").fieldValue)})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="BillName").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Bill Name",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.BillName),
                NewValue: Text(LookUp(collFormValues, fieldID="BillName").fieldValue)})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="InitiativeName").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Initiative Name",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.InitiativeName),
                NewValue: Text(LookUp(collFormValues, fieldID="InitiativeName").fieldValue)})),
                
                If(!IsBlank(LookUp(collFormValues, fieldID="Situation").fieldValue),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Situation",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.Situation),
                NewValue: Text(LookUp(collFormValues, fieldID="Situation").fieldValue)})),
                
                // **************** Single Option Set **************************
                
                If(!(varLOBChannelHorizontal = varCurrentRecord.LOBChannelHorizontal),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "LOB / Channel / Horizontal",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.LOBChannelHorizontal),
                NewValue: Text(varLOBChannelHorizontal)})),
                
                If(!(varCurrentRecord.SubPhase = varSubPhase),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "SubPhase",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.SubPhase),
                NewValue: Text(varSubPhase)})),
                
                If(!(varCurrentRecord.Phase = varPhase),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Phase",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.Phase),
                NewValue: Text(varPhase)})),
                
                // **************** Toggle **************************
                
                If(!(varCurrentRecord.DarkStatus = varDarkStatus),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Dark Status",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.DarkStatus),
                NewValue: Text(varDarkStatus)})),
                
                If(!(varCurrentRecord.GoesOnCalendar = varGoesOnCalendar),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Goes on Calendar",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.GoesOnCalendar),
                NewValue: Text(varGoesOnCalendar)})),
                
                If(!(varCurrentRecord.CustomerImpacting = varCustomerImpacting),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Customer Impacting",
                GTMEntry: varCurrentRecord,
                OldValue: Text(varCurrentRecord.CustomerImpacting),
                NewValue: Text(varCustomerImpacting)})),
                
                // **************** Multi Select **************************
                
                If(!(Concat(varCurrentRecord.Channels, Value&",") = Concat(Filter(colChannels, !IsBlank(Value)), Value&",")),
                Patch(OrbitAuditHistories, varOrbitAuditHistoriesDefaults, {
                FieldName: "Channels",
                GTMEntry: varCurrentRecord,
                OldValue: Concat(varCurrentRecord.Channels, Value&","),
                NewValue: Concat(Filter(colChannels, !IsBlank(Value)), Value&",")}))
                
                );
                UpdateContext({showLoader: true});
                Set(varCurrentRecord, LookUp(gtmEntries, gtmEntry = varCurrentRecord.gtmEntry));
                
                Clear(colFormValuesPatch);
                
                Set(varConfirmExitMessage, false);
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Patch Change Log"
            Visible: =varDevMode
            Width: =150
            X: =1195
            Y: =132
            ZIndex: =7

        btn_Submit_3 As button:
            BorderColor: =ColorFade(btn_Submit_3.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
                =If(
                (Value(lbl_RequiredFieldsRemainingCount.Text) < 1 And varRecordEditTrue And (com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged)) Or 
                
                (Value(lbl_RequiredFieldsRemainingCount.Text) < 1 And varIsNewInitiative And (com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged)) Or 
                
                varDevMode Or 
                
                varGTMOverrideMode Or
                
                (Value(lbl_RequiredFieldsRemainingCount.Text) < 1 And 
                varIsDraftInitiative
                //!IsBlank(Find("WriteAccess", varRecordPermissions.recordpermissions))
                //varRecordEditPermissions 
                //And (com_FormSection_1.FormValuesChanged Or com_FormSection_2.FormValuesChanged Or com_FormSection_3.FormValuesChanged Or com_FormSection_4.FormValuesChanged Or com_FormSection_5.FormValuesChanged)
                ),   
                    
                    DisplayMode.Edit, 
                    DisplayMode.Disabled)
            Fill: =RGBA(226, 0, 116, 1)
            FocusedBorderColor: =btn_Submit_3.BorderColor
            FocusedBorderThickness: =1
            Font: ='Open Sans'
            FontWeight: =FontWeight.Bold
            Height: =30
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_Submit_3.Fill, -20%)
            OnSelect: |-
                =UpdateContext({showLoader: false});
                UpdateContext({varLoadingDataMessage: "Saving Your Initiative"});
                Set(varConfirmExitMessage, true);
                UpdateContext({varSubmittingInitiative: true});
                
                ClearCollect(colFormValuesPatch, collFormValues);
                
                If(IsBlank(Text(varCurrentRecord.Phase)), 
                    Set(varIsNewInitiative, true));
                
                Set(varDraft, 'SubmittedAsDraft (gtmEntries)'.No); // Set to No to eliminate duplicate flows running on BPF
                
                If(varIsNewInitiative Or Text(varCurrentRecord.Phase) = "Draft", 
                    If(Text(varCurrentRecord.Phase) = "Draft", UpdateContext({varAdvanceStageToNew: true}));
                    Set(varPhase, Phase.New);
                    UpdateContext({varInitiativeSubmitDate: DateAdd(DateAdd(Now(),TimeZoneOffset(Now()), Minutes), -8, Hours)});
                    Set(varIsDraftInitiative, false);,
                    Set(varPhase, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Phase").fieldValue), varCurrentRecord.Phase, 
                        Switch(LookUp(colFormValuesPatch, fieldID="Phase").fieldValue,
                            "New", Phase.New,
                            "Concept", Phase.Concept,
                            "Assessment", Phase.Assessment,
                            "Requirements", Phase.Requirements,
                            "Build", Phase.Build,
                            "Approved", Phase.Approved,
                            "On Hold", Phase.'On Hold',
                            "Launched", Phase.Launched,
                            "Canceled", Phase.Canceled,
                            "Declined", Phase.Declined,
                            "Moved To Project", Phase.'Moved To Project',
                            "Pre-Concept", Phase.'Pre-Concept'))));
                
                Select(btn_SetVariables)
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Submit"
            Visible: =varIsNewInitiative Or varIsDraftInitiative Or varRecordEditTrue Or varDevMode Or varRecordEditPermissions
            Width: =128
            X: =1724
            Y: =70
            ZIndex: =10

        btn_Cancel_1 As button:
            BorderColor: =ColorFade(btn_Cancel_1.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
                =DisplayMode.Edit
                //If(BDL_RequiredFields_Number.Text = "0",DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(149, 149, 149, 1)
            FocusedBorderColor: =btn_Cancel_1.BorderColor
            FocusedBorderThickness: =1
            Font: ='Open Sans'
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_Cancel_1.Fill, -20%)
            OnSelect: |-
                =//If(varIsNewInitiative, Navigate(New_Intake_Screen, Transition.None), 
                UpdateContext({showLoader: false});
                UpdateContext({varLoadingDataMessage: "Loading Initiative List"});
                
                If(varIsNewInitiative, 
                    ClearCollect(collFormValues, Filter(ComponentFieldDetails, formID = varInitiativeType, isOnIntake = true)), 
                    ClearCollect(collFormValues, Filter(ComponentFieldDetails, formID = varInitiativeType))
                );
                
                //UpdateContext({showLoader: true});
                Navigate(Project_Picker_Screen, Transition.None);
                
                Reset(com_FormSection_1);Reset(com_FormSection_2);Reset(com_FormSection_3);Reset(com_FormSection_4);Reset(com_FormSection_5)
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Cancel"
            Visible: =varIsNewInitiative Or varIsDraftInitiative Or varRecordEditTrue Or varDevMode Or varRecordEditPermissions
            Width: =135
            X: =1572
            Y: =70
            ZIndex: =11

        btn_PatchValues As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(105, 121, 126, 1)
            FocusedBorderColor: =btn_PatchValues.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =Set(varInitiaitveUpdated, true);
                
                If(IsBlank(Text(varCurrentRecord.Phase)) Or varChangeRequest, 
                    UpdateContext({varRecordDefaults: Defaults(gtmEntries)});
                    UpdateContext({varTempLegacyID: 9999999}),
                    UpdateContext({varOriginalCreatedByUser: varCurrentRecord.OriginalCreatedByUser});
                    UpdateContext({varRecordDefaults: varCurrentRecord});
                    UpdateContext({varTempLegacyID: varCurrentRecord.legacyGTMEntryID}));
                
                UpdateContext({varLastRecordSubmit: 
                Patch(gtmEntries, varRecordDefaults, {
                
                SubmittedAsDraft: varDraft,
                
                // ****** People Picker ***** 
                'Business Owner': varBusinessOwnerRecord,
                'Sponsoring VP': varSponsorRecord,
                OriginalCreatedByUser : varCurrentUserRecord,
                
                // ***** Text Input ***** 
                legacyGTMEntryID: varTempLegacyID,
                AnticipatedVolumeTakeRatesDaily: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="AnticipatedVolumeTakeRatesDaily").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="AnticipatedVolumeTakeRatesDaily").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.AnticipatedVolumeTakeRatesDaily, 
                			"")),
                AnticipatedVolumeTakeRatesTotal: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="AnticipatedVolumeTakeRatesTotal").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="AnticipatedVolumeTakeRatesTotal").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.AnticipatedVolumeTakeRatesTotal, 
                			"")),
                AssessedThreeYearNPV: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="AssessedThreeYearNPV").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="AssessedThreeYearNPV").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.AssessedThreeYearNPV, 
                			"")),
                BillName: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="BillName").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="BillName").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.BillName, 
                			"")),
                CostcoRebateCode: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="CostcoRebateCode").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="CostcoRebateCode").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.CostcoRebateCode, 
                			"")),
                EligibilityAndExclusions: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="EligibilityAndExclusions").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="EligibilityAndExclusions").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.EligibilityAndExclusions, 
                			"")),
                CustomerExperience: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="CustomerExperience").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="CustomerExperience").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.CustomerExperience, 
                			"")),
                Description: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="Description").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="Description").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.Description, 
                			"")),
                DesiredExecutionExplanation: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="DesiredExecutionExplanation").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="DesiredExecutionExplanation").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.DesiredExecutionExplanation, 
                			"")),
                DesignPrinciples: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="DesignPrinciples").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="DesignPrinciples").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.DesignPrinciples, 
                			"")),
                DetailsStillOpen: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="DetailsStillOpen").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="DetailsStillOpen").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.DetailsStillOpen, 
                			"")),
                DeviceName: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="DeviceName").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="DeviceName").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.DeviceName, 
                			"")),
                DeviceOEM: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="DeviceOEM").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="DeviceOEM").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.DeviceOEM, 
                			"")),
                EligibilitySummary: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="EligibilitySummary").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="EligibilitySummary").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.EligibilitySummary, 
                			"")),			
                EligibleDevices: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="EligibleDevices").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="EligibleDevices").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.EligibleDevices, 
                			"")),
                ExpectedMarketingSupport: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ExpectedMarketingSupport").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ExpectedMarketingSupport").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ExpectedMarketingSupport, 
                			"")),
                ExplainAudienceSpecificCommunications: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ExplainAudienceSpecificCommunications").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ExplainAudienceSpecificCommunications").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ExplainAudienceSpecificCommunications, 
                			"")),
                ExplainIntegratedMarketing: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ExplainIntegratedMarketing").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ExplainIntegratedMarketing").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ExplainIntegratedMarketing, 
                			"")),
                ExplainTargetAudienceSegment: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ExplainTargetAudienceSegment").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ExplainTargetAudienceSegment").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ExplainTargetAudienceSegment, 
                			"")),
                GoalKPI: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="GoalKPI").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="GoalKPI").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.GoalKPI, 
                			"")),
                IncrementalLiftDaily: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="IncrementalLiftDaily").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="IncrementalLiftDaily").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.IncrementalLiftDaily, 
                			"")),
                IncrementalLiftTotal: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="IncrementalLiftTotal").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="IncrementalLiftTotal").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.IncrementalLiftTotal, 
                			"")),
                InitiativeName: 
                	If(varChangeRequest, "Change Request", Coalesce(LookUp(colFormValuesPatch, fieldID="InitiativeName").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="InitiativeName").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.InitiativeName, 
                			""))),
                KeyAssumptions: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="KeyAssumptions").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="KeyAssumptions").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.KeyAssumptions, 
                			"")),
                KeyFeatures: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="KeyFeatures").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="KeyFeatures").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.KeyFeatures, 
                			"")),
                LocalMarket: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="LocalMarket").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="LocalMarket").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.LocalMarket, 
                			"")),
                NameofExistingProduct: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="NameofExistingProduct").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="NameofExistingProduct").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.NameofExistingProduct, 
                			"")),
                NumberofCustomersTargeted: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="NumberofCustomersTargeted").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="NumberofCustomersTargeted").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.NumberofCustomersTargeted, 
                			"")),
                NumberOfAddALineRequired: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="NumberOfAddALineRequired").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="NumberOfAddALineRequired").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.NumberOfAddALineRequired, 
                			"")),
                OfferLimitsConsumerTFB: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="OfferLimitsConsumerTFB").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="OfferLimitsConsumerTFB").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.OfferLimitsConsumerTFB, 
                			"")),
                OfferLimitsTFBBAN: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="OfferLimitsTFBBAN").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="OfferLimitsTFBBAN").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.OfferLimitsTFBBAN, 
                			"")),
                OfferRevisionDescription: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="OfferRevisionDescription").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="OfferRevisionDescription").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.OfferRevisionDescription, 
                			"")),
                OtherBusinessBenefit: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="OtherBusinessBenefit").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="OtherBusinessBenefit").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.OtherBusinessBenefit, 
                			"")),
                OtherLimitationsAndExclusions: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="OtherLimitationsAndExclusions").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="OtherLimitationsAndExclusions").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.OtherLimitationsAndExclusions, 
                			"")),
                OtherPromotionsNotStackable: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="OtherPromotionsNotStackable").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="OtherPromotionsNotStackable").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.OtherPromotionsNotStackable, 
                			"")),
                Pitch: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="Pitch").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="Pitch").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.Pitch, 
                			"")),
                PositioningMessaging: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="PositioningMessaging").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="PositioningMessaging").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.PositioningMessaging, 
                			"")),
                PRCode: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="PRCode").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="PRCode").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.PRCode, 
                			"")),
                PJCode: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="PJCode").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="PJCode").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.PJCode, 
                			"")),
                ProductFunctionality: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ProductFunctionality").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ProductFunctionality").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ProductFunctionality, 
                			"")),
                ProductNotes: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ProductNotes").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ProductNotes").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ProductNotes, 
                			"")),
                ProductObjectives: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ProductObjectives").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ProductObjectives").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ProductObjectives, 
                			"")),
                PromoCode: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="PromoCode").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="PromoCode").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.PromoCode, 
                			"")),
                ReasonToBelieve: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ReasonToBelieve").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ReasonToBelieve").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ReasonToBelieve, 
                			"")),
                ShortDescription: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ShortDescription").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ShortDescription").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ShortDescription, 
                			"")),
                Situation: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="Situation").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="Situation").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.Situation, 
                			"")),
                SteeringMeetingResults: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="SteeringMeetingResults").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="SteeringMeetingResults").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.SteeringMeetingResults, 
                			"")),
                SupportPlan: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="SupportPlan").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="SupportPlan").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.SupportPlan, 
                			"")),
                Target: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="Target").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="Target").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.Target, 
                			"")),
                TotalNetAddGoals: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="TotalNetAddGoals").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="TotalNetAddGoals").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.TotalNetAddGoals, 
                			"")),
                TotalOfferSpend: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="TotalOfferSpend").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="TotalOfferSpend").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.TotalOfferSpend, 
                			"")),
                TriageNotes: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="TriageNotes").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="TriageNotes").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.TriageNotes, 
                			"")),
                ValueProposition: 
                	Coalesce(LookUp(colFormValuesPatch, fieldID="ValueProposition").fieldValue, 
                		If(LookUp(colFormValuesPatch, fieldID="ValueProposition").defaultValue <> "NULL" And !varChangeRequest, 
                			varCurrentRecord.ValueProposition, 
                			"")),
                
                
                // ***** Date Picker ***** 
                RequestedLaunchDate: Coalesce(DateValue(LookUp(colFormValuesPatch, fieldID="RequestedLaunchDate").fieldValue), 
                	If(LookUp(colFormValuesPatch, fieldID="RequestedLaunchDate").defaultValue <> "NULL" And !varChangeRequest,
                		DateValue(Text(varCurrentRecord.RequestedLaunchDate)),
                		Blank())),
                PreOrderDate: Coalesce(DateValue(LookUp(colFormValuesPatch, fieldID="PreOrderDate").fieldValue), 
                	If(LookUp(colFormValuesPatch, fieldID="PreOrderDate").defaultValue <> "NULL" And !varChangeRequest,
                		DateValue(Text(varCurrentRecord.PreOrderDate)),
                		Blank())),
                ForecastedDate: Coalesce(DateValue(LookUp(colFormValuesPatch, fieldID="ForecastedDate").fieldValue), 
                	If(LookUp(colFormValuesPatch, fieldID="ForecastedDate").defaultValue <> "NULL" And !varChangeRequest,
                		DateValue(Text(varCurrentRecord.ForecastedDate)),
                		Blank())),
                PreSaleDate: Coalesce(DateValue(LookUp(colFormValuesPatch, fieldID="PreSaleDate").fieldValue), 
                	If(LookUp(colFormValuesPatch, fieldID="PreSaleDate").defaultValue <> "NULL" And !varChangeRequest,
                		DateValue(Text(varCurrentRecord.PreSaleDate)),
                		Blank())),		
                EstimatedLaunchDate: Coalesce(DateValue(LookUp(colFormValuesPatch, fieldID="EstimatedLaunchDate").fieldValue), 
                	If(LookUp(colFormValuesPatch, fieldID="EstimatedLaunchDate").defaultValue <> "NULL" And !varChangeRequest,
                		DateValue(Text(varCurrentRecord.EstimatedLaunchDate)),
                		Blank())),
                CommittedLaunchDate: Coalesce(DateValue(LookUp(colFormValuesPatch, fieldID="CommittedLaunchDate").fieldValue), 
                	If(LookUp(colFormValuesPatch, fieldID="CommittedLaunchDate").defaultValue <> "NULL" And !varChangeRequest,
                		DateValue(Text(varCurrentRecord.CommittedLaunchDate)),
                		Blank())),
                EndDate: Coalesce(DateValue(LookUp(colFormValuesPatch, fieldID="EndDate").fieldValue), 
                	If(LookUp(colFormValuesPatch, fieldID="EndDate").defaultValue <> "NULL" And !varChangeRequest,
                		DateValue(Text(varCurrentRecord.EndDate)),
                		Blank())),
                InitiativeSubmitDate: Coalesce(varInitiativeSubmitDate, DateValue(Text(varCurrentRecord.InitiativeSubmitDate))),
                
                // ***** Toggles ***** 
                
                ActiveServiceRequired: varActiveServiceRequired,
                CarrierFreedom: varCarrierFreedom,
                DarkStatus: varDarkStatus, 
                EmployeeDiscount: varEmployeeDiscount,
                EmployeeEligible: varEmployeeEligible,
                Integration: varIntegration,
                JUMPEligible: varJUMPEligible,
                LimitedTimeOffer: varLimitedTimeOffer,
                MAPRestricted: varMAPRestricted,
                Market: varMarket,
                PromoDetailsLocked: varPromoDetailsLocked,
                ReplacingAnExistingProduct: varReplacingAnExistingProduct,
                Monitoring: varMonitoring,
                ChangeRequest: varChangeRequest,
                IsolatedCapacity: varIsolatedCapacity,
                
                // ***** Dropdown ***** 
                AnnualGALiftEstimate: varAnnualGALiftEstimate,
                AudienceSpecificCommunications: varAudienceSpecificCommunications,
                BeneficiaryLOB: varBeneficiaryLOB,
                Brand: varBrand,
                BusinessBenefit: varBusinessBenefit,
                Category: varCategory,
                CustomerImpacting: varCustomerImpacting,
                Day: varDay,
                DesiredExecution: varDesiredExecution,
                GoesOnCalendar: varGoesOnCalendar,
                IntegratedMarketing: varIntegratedMarketing,
                InitiativeType: Coalesce(varInitiativeTypePatch, varCurrentRecord.InitiativeType),
                InitiativeTypeGroup: Coalesce(varRequestTypePatch, varCurrentRecord.InitiativeTypeGroup),
                LOBChannelHorizontal: varLOBChannelHorizontal,
                MarketingSupportNeeded: varMarketingSupportNeeded,
                OfferType: varOfferType,
                Phase: varPhase, 
                Priority: varPriority,
                PriorityQuarter: varPriorityQuarter,
                PTLOESWAG: varPTLOESWAG,
                StrategicPillar: varStrategicPillar,
                SubPhase: varSubPhase,
                SystemStack: varSystemStack,
                TargetAudienceSegment: varTargetAudienceSegment,
                ThreeYearNPV: varThreeYearNPV,
                Tier: varTier,
                ValidationCheck: varValidationCheck
                })});
                
                 //***** Multi Select ***** 
                If(!IsBlank(varBeneficiaryLOBApproverRecord.'Full Name'), 
                	Patch(gtmEntries, varLastRecordSubmit, {BeneficiaryLOBApprover: varBeneficiaryLOBApproverRecord}));
                IfError(If(!IsEmpty(colMobileInternetPlanRequirements), 
                	Patch(gtmEntries, varLastRecordSubmit, {MobileInternetPlanRequirements: Filter(colMobileInternetPlanRequirements, !IsBlank(Value))})), 
                	Notify("Error Saving Mobile Internet Plan Requirements"));
                IfError(If(!IsEmpty(colAdditionalEligibilityRequirements), Patch(gtmEntries, varLastRecordSubmit, {AdditionalEligibilityRequirements: Filter(colAdditionalEligibilityRequirements, !IsBlank(Value))})), Notify("Error Saving Additional Eligibility Requirements"));
                IfError(If(!IsEmpty(colChannels), Patch(gtmEntries, varLastRecordSubmit, {Channels: Filter(colChannels, !IsBlank(Value))})), Notify("Error Saving Channels"));
                IfError(If(!IsEmpty(colCustomerSegment), Patch(gtmEntries, varLastRecordSubmit, {CustomerSegment: Filter(colCustomerSegment, !IsBlank(Value))})), Notify("Error Saving Customer Segment"));
                IfError(If(!IsEmpty(colPurchaseTypeFinancing), Patch(gtmEntries, varLastRecordSubmit, {PurchaseTypeFinancing: Filter(colPurchaseTypeFinancing, !IsBlank(Value))})), Notify("Error Saving Purchase Type Financing"));
                IfError(If(!IsEmpty(colDeviceFulfillmentInScope), Patch(gtmEntries, varLastRecordSubmit, {DeviceFulfillmentInScope: Filter(colDeviceFulfillmentInScope, !IsBlank(Value))})), Notify("Error Saving Device Fulfillment In Scope"));
                IfError(If(!IsEmpty(colPlanAndFeatureRequirementsBuild), Patch(gtmEntries, varLastRecordSubmit, {PlanAndFeatureRequirementsBuild: Filter(colPlanAndFeatureRequirementsBuild, !IsBlank(Value))})), Notify("Error Saving Plan and Feature Requirements Build"));
                IfError(If(!IsEmpty(colAddALineTypes), Patch(gtmEntries, varLastRecordSubmit, {AddALineTypes: Filter(colAddALineTypes, !IsBlank(Value))})), Notify("Error Saving Add a Line Types"));
                IfError(If(!IsEmpty(colWearablePlanRequirements), Patch(gtmEntries, varLastRecordSubmit, {WearablePlanRequirements: Filter(colWearablePlanRequirements, !IsBlank(Value))})), Notify("Error Saving Wearable Plan Requirements"));
                IfError(If(!IsEmpty(colGALiftType), Patch(gtmEntries, varLastRecordSubmit, {GALiftType: Filter(colGALiftType, !IsBlank(Value))})), Notify("Error Saving GA Lift Type"));
                IfError(If(!IsEmpty(colTesting), Patch(gtmEntries, varLastRecordSubmit, {Testing: Filter(colTesting, !IsBlank(Value))})), Notify("Error Saving Testing"));
                IfError(If(!IsEmpty(colVoiceRatePlanRequirements), Patch(gtmEntries, varLastRecordSubmit, {VoiceRatePlanRequirements: Filter(colVoiceRatePlanRequirements, !IsBlank(Value))})), Notify("Error Saving Voice Rate Plan Requirements"));
                IfError(If(!IsEmpty(colRatePlanRequirements), Patch(gtmEntries, varLastRecordSubmit, {RatePlanRequirements: Filter(colRatePlanRequirements, !IsBlank(Value))})), Notify("Error Saving Rate Plan Requirements"));
                
                
                If(IsBlank(Text(varCurrentRecord.Phase)) And !varChangeRequest Or (Text(varDraft) = "Yes") And !varChangeRequest Or varAdvanceStageToNew And !varChangeRequest, 
                    Set(varAddAttachmentDialogue, true); Set(varBlurBackground, true));
                
                If(!varIsDraftInitiative And !IsBlank(Text(varCurrentRecord.Phase)) And !varIsNewInitiative And !varChangeRequest, 
                    Select(btn_LogToChangeHistory), UpdateContext({showLoader: true})); // Log Change History for all record change except drafts and new submits
                
                If(varAdvanceStageToNew, 
                    Select(btn_MoveToNextBPFStage);
                    UpdateContext({varAdvanceStageToNew: false}));
                
                If(varChangeRequest, 
                    Select(btn_Patch_CR));
                    
                UpdateContext({varOriginalCreatedByUser: varCurrentUserRecord});
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Patch to CDS"
            Visible: =varDevMode
            Width: =150
            X: =1195
            Y: =109
            ZIndex: =12

        btn_SubmitDraft As button:
            BorderColor: =ColorFade(btn_SubmitDraft.Fill, -15%)
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =White
            DisabledBorderColor: =RGBA(83, 83, 83, 1)
            DisabledColor: =White
            DisabledFill: =RGBA(166, 166, 166, 1)
            DisplayMode: |-
                =DisplayMode.Edit
                //If(BDL_RequiredFields_Number.Text = "0",DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(226, 0, 116, 1)
            FocusedBorderColor: =btn_SubmitDraft.BorderColor
            FocusedBorderThickness: =1
            Font: =FontStyle
            FontWeight: =FontWeight.Semibold
            Height: =30
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =White
            HoverFill: =ColorFade(btn_SubmitDraft.Fill, -20%)
            OnSelect: |-
                =If(!varIsNewInitiative And !varIsDraftInitiative, UpdateContext({showLoader: true})); // dont show loader if updating record
                Set(varIsDraftInitiative, true);
                UpdateContext({varLoadingDataMessage: "Saving Your Initiative"});
                
                Set(varDraft, 'SubmittedAsDraft (gtmEntries)'.Yes); // Set to Yes to eliminate dupliate approval flows from running on New stage of BPF
                
                // ***** Set Dropdown Variables to Patch ***** //
                
                Set(varPhase, Phase.Draft);  // Set to Draft for Draft initiative saves
                
                ClearCollect(colFormValuesPatch, collFormValues);
                
                Select(btn_SetVariables)
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Save As Draft"
            Visible: |-
                =varCurrentRecord.Phase = Phase.Draft Or IsBlank(varCurrentRecord.Phase) Or varDevMode //Or varRecordEditPermissions
                //varCurrentUserSecurityRole = "Administrator" And varCurrentRecord.Phase = Phase.Draft Or varCurrentUserSecurityRole = "Administrator" And IsBlank(varCurrentRecord.Phase) Or varDevMode
            Width: =128
            X: =1425
            Y: =70
            ZIndex: =15

        btn_SetVariables As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(105, 121, 126, 1)
            FocusedBorderColor: =btn_SetVariables.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =// ***** Set People Picker Variables *****
                UpdateContext({varTempVariablesComplete: "start"});
                Set(varSponsorRecord, 
                    If(IsBlank(com_FormSection_1.SelectedSponsorVP), 
                        varCurrentRecord.'Sponsoring VP', 
                        com_FormSection_1.SelectedSponsorVP));
                
                Set(varBusinessOwnerRecord, 
                    If(IsBlank(com_FormSection_1.SelectedBusinessOwner),
                        varCurrentRecord.'Business Owner', 
                        com_FormSection_1.SelectedBusinessOwner));
                
                
                // ***** update values in form values if changed on summary
                If(!IsBlank(LookUp(colFormValuesPatch, fieldID="BeneficiaryLOBApprover").fieldValue),
                Set(varBeneficiaryLOBApproverRecord, First(Search(Users, LookUp(colFormValuesPatch, fieldID="BeneficiaryLOBApprover").fieldValue, "nickname"))));
                
                Set(varRequestTypePatch, 
                	Switch(varRequestType,
                		"Business", InitiativeTypeGroup.Business,
                		"P&T", InitiativeTypeGroup.'P&T'));
                
                Set(varInitiativeTypePatch, 
                	Switch(varInitiativeType,
                		"Device Launch", InitiativeType.'Device Launch',
                		"Device Promotion", InitiativeType.'Device Promotion',
                		"Digital Transformation", InitiativeType.'Digital Transformation',
                		"Lights On", InitiativeType.'Lights On',
                		"Other", InitiativeType.Other,
                		"Project", InitiativeType.Project,
                		"Service Offer", InitiativeType.'Service Offer'
                		));
                
                Set(varBrand, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Brand").fieldValue), varCurrentRecord.Brand, 
                    Switch(LookUp(colFormValuesPatch, fieldID="Brand").fieldValue,
                        "TMO Postpaid", Brand.'TMO Postpaid',
                        "Metro", Brand.Metro,
                        "N/A", Brand.'N/A',
                        "Sprint", Brand.Sprint,
                        "T-Mobile Postpaid + Metro", Brand.'T-Mobile Postpaid + Metro',
                        "T-Mobile Postpaid + Sprint", Brand.'T-Mobile Postpaid + Sprint',
                        "TMO Prepaid", Brand.'TMO Prepaid')));
                
                Set(varBeneficiaryLOB, If(IsBlank(LookUp(colFormValuesPatch, fieldID="BeneficiaryLOB").fieldValue), varCurrentRecord.BeneficiaryLOB, 
                    Switch(LookUp(colFormValuesPatch, fieldID="BeneficiaryLOB").fieldValue,
                        "Brand & Network", BeneficiaryLOB.'Brand & Network',
                        "Consumer Postpaid", BeneficiaryLOB.'Consumer Postpaid',
                        "Consumer Prepaid", BeneficiaryLOB.'Consumer Prepaid',
                        "H & E", BeneficiaryLOB.'H & E',
                        "Small Town Rural", BeneficiaryLOB.'Small Town Rural',
                        "TFB", BeneficiaryLOB.TFB,
                        "Emerging Business", BeneficiaryLOB.'Emerging Business',
                        "T-Mobile Tuesdays", BeneficiaryLOB.'T-Mobile Tuesdays')));
                
                Set(varCategory, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Category").fieldValue), varCurrentRecord.Category, 
                    Switch(LookUp(colFormValuesPatch, fieldID="Category").fieldValue,
                        "Existing", Category.Existing,
                        "New", Category.New)));
                
                Set(varLOBChannelHorizontal, If(IsBlank(LookUp(colFormValuesPatch, fieldID="LOBChannelHorizontal").fieldValue), varCurrentRecord.LOBChannelHorizontal, 
                    Switch(LookUp(colFormValuesPatch, fieldID="LOBChannelHorizontal").fieldValue,
                        "Advertising & Data", LOBChannelHorizontal.'Advertising & Data',
                        "Back Office", LOBChannelHorizontal.'Back Office',
                        "Field Sales", LOBChannelHorizontal.'Field Sales',
                        "Care", LOBChannelHorizontal.Care,
                        "Commercial", LOBChannelHorizontal.Commercial,
                        "Device & Supply Chain", LOBChannelHorizontal.'Device & Supply Chain',
                        "Engineering & Operations", LOBChannelHorizontal.'Engineering & Operations',
                        "Digital", LOBChannelHorizontal.Digital,
                        "Home & Entertainment", LOBChannelHorizontal.'Home & Entertainment',
                        "Emerging Business", LOBChannelHorizontal.'Emerging Business',
                        "IMO", LOBChannelHorizontal.IMO,
                        "Consumer Markets Postpaid", LOBChannelHorizontal.'Consumer Markets Postpaid',
                        "Marketing", LOBChannelHorizontal.Marketing,
                        "Consumer Markets Prepaid", LOBChannelHorizontal.'Consumer Markets Prepaid',
                        "MVNO", LOBChannelHorizontal.MVNO,
                        "T-Mobile For Business", LOBChannelHorizontal.'T-Mobile For Business',
                        "Wholesale IOT & M2M", LOBChannelHorizontal.'Wholesale IOT & M2M',
                        "Wholesale/MVNO", LOBChannelHorizontal.'Wholesale/MVNO',
                        "Enterprise", LOBChannelHorizontal.Enterprise,
                        "Finance", LOBChannelHorizontal.Finance,
                        "Product & Technology", LOBChannelHorizontal.'Product & Technology'
                    )));
                
                Set(varOfferType, If(IsBlank(LookUp(colFormValuesPatch, fieldID="OfferType").fieldValue), varCurrentRecord.OfferType, 
                	Switch(LookUp(colFormValuesPatch, fieldID="OfferType").fieldValue,
                		"BPTCR", OfferType.BPTCR,
                		"Feature", OfferType.Feature,
                		"LLBC", OfferType.LLBC,
                		"Price Plan", OfferType.'Price Plan',
                		"Service Hook UP", OfferType.'Service Hook UP',
                        "Data Plan", OfferType.'Data Plan',
                		"Service Promotion", OfferType.'Service Promotion',
                		"Roaming", OfferType.Roaming,
                        "Services", OfferType.Services,
                		"SOC", OfferType.SOC,
                        "Auto-Pay", OfferType.'Auto-Pay',
                        "Bundle", OfferType.Bundle,
                		"Whitelisting", OfferType.Whitelisting,
                		"Other", OfferType.Other,
                		"Rate Plan", OfferType.'Rate Plan',
                		"Waiving a Fee", OfferType.'Waiving a Fee',
                		"Handset Offer or Promo (HOP)", OfferType.'Handset Offer or Promo (HOP)',
                		"Manual Discount", OfferType.'Manual Discount',
                		"Prepaid Promo", OfferType.'Prepaid Promo')));
                
                Set(varTier, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Tier").fieldValue), varCurrentRecord.Tier, 
                	Switch(LookUp(colFormValuesPatch, fieldID="Tier").fieldValue,
                		"Affordable", Tier.Affordable,
                		"Flagship", Tier.Flagship,
                		"Feature", Tier.Feature,
                		"IOT", Tier.IOT,
                		"IOT/BTS", Tier.'IOT/BTS',
                		"Midtier", Tier.Midtier,
                		"Tablet", Tier.Tablet,
                		"Wearable", Tier.Wearable,
                		"Other", Tier.Other,
                		"Apple", Tier.Apple,
                		"Branded Phablet", Tier.'Branded Phablet',
                		"Tier 2 Phablet", Tier.'Tier 2 Phablet',
                		"Branded Mid-Tier", Tier.'Branded Mid-Tier',
                		"Branded Entry", Tier.'Branded Entry',
                		"Tier 2 Entry", Tier.'Tier 2 Entry')));
                
                Set(varPriorityQuarter, If(IsBlank(LookUp(colFormValuesPatch, fieldID="PriorityQuarter").fieldValue), varCurrentRecord.PriorityQuarter, 
                	Switch(LookUp(colFormValuesPatch, fieldID="PriorityQuarter").fieldValue,
                		"Q1 2019", PriorityQuarter.'Q1 2019',
                		"Q2 2019", PriorityQuarter.'Q2 2019',
                		"Q3 2019", PriorityQuarter.'Q3 2019',
                		"Q4 2019", PriorityQuarter.'Q4 2019',
                		"2019 Op Ex", PriorityQuarter.'2019 Op Ex',
                		"Q1 2020 ", PriorityQuarter.'Q1 2020',
                		"Q2 2020", PriorityQuarter.'Q2 2020',
                		"Q3 2020", PriorityQuarter.'Q3 2020',
                		"Q4 2020", PriorityQuarter.'Q4 2020',
                		"2020 Op Ex", PriorityQuarter.'2020 Op Ex')));
                
                Set(varSubPhase, If(IsBlank(LookUp(colFormValuesPatch, fieldID="SubPhase").fieldValue), varCurrentRecord.SubPhase, 
                	Switch(LookUp(colFormValuesPatch, fieldID="SubPhase").fieldValue,
                		"Steering Re-Approval", SubPhase.'Steering Re-Approval',
                		"On Hold", SubPhase.'On Hold',
                		"Impaired", SubPhase.Impaired,
                		"Pipeline", SubPhase.Pipeline,
                		"Moved to P&T", SubPhase.'Moved to P&T',
                		"Pending Approval", SubPhase.'Pending Approval',
                		"In Flight", SubPhase.'In Flight',
                		"Priority", SubPhase.Priority,
                		"Project Closure", SubPhase.'Project Closure',
                		"Capacity Hold", SubPhase.'Capacity Hold',
                		"Canceled", SubPhase.Canceled,
                		"Plan Record Only", SubPhase.'Plan Record Only',
                        "Capacity Backlog", SubPhase.'Capacity Backlog',
                		"Test", SubPhase.Test)));
                
                Set(varStrategicPillar, If(IsBlank(LookUp(colFormValuesPatch, fieldID="StrategicPillar").fieldValue), varCurrentRecord.StrategicPillar, 
                	Switch(LookUp(colFormValuesPatch, fieldID="StrategicPillar").fieldValue,
                		"Drive Network Perception", StrategicPillar.'Drive Network Perception',
                		"Maximize Profitable Core Growth", StrategicPillar.'Maximize Profitable Core Growth',
                		"Emerging Businesses", StrategicPillar.'Emerging Businesses',
                		"Nail Integration", StrategicPillar.'Nail Integration',
                		"Nail 5G", StrategicPillar.'Nail 5G',
                		"Scale the Business", StrategicPillar.'Scale the Business',
                		"Deliver World Class Experiences", StrategicPillar.'Deliver World Class Experiences',
                		"Create & Keep Switchers", StrategicPillar.'Create & Keep Switchers',
                		"Simplicity & Digitalization", StrategicPillar.'Simplicity & Digitalization',
                		"Grow from New Places", StrategicPillar.'Grow from New Places',
                		"Operate the Business", StrategicPillar.'Operate the Business')));
                
                Set(varDay, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Day").fieldValue), varCurrentRecord.Day, 
                	Switch(LookUp(colFormValuesPatch, fieldID="Day").fieldValue,
                		"Day 0", Day.'Day 0',
                		"Day 0.5", Day.'Day 0.5',
                		"Day 1", Day.'Day 1',
                		"Day 1+", Day.'Day 1+',
                        "Day 1+ CTA/Migration", Day.'Day 1+ CTA/Migration',
                        "Day 1+ CTA/Synergy", Day.'Day 1+ CTA/Synergy')));
                
                Set(varSystemStack, If(IsBlank(LookUp(colFormValuesPatch, fieldID="SystemStack").fieldValue), varCurrentRecord.SystemStack, 
                	Switch(LookUp(colFormValuesPatch, fieldID="SystemStack").fieldValue,
                		"Both", SystemStack.Both,
                		"Sprint", SystemStack.Sprint,
                        "Metro (All)", SystemStack.'Metro (All)',
                        "Metro (Dealer POS)", SystemStack.'Metro (Dealer POS)',
                        "Metro (COR POS)", SystemStack.'Metro (COR POS)',
                		"T-Mobile", SystemStack.'T-Mobile',
                		"T-Mobile Postpaid", SystemStack.'T-Mobile Postpaid',
                		"T-Mobile Prepaid (Legacy)", SystemStack.'T-Mobile Prepaid (Legacy)',
                		"T-Mobile Prepaid (Rebellion)", SystemStack.'T-Mobile Prepaid (Rebellion)',
                		"T-Mobile Postpaid + Sprint", SystemStack.'T-Mobile Postpaid + Sprint',
                		"T-Mobile Prepaid (All)", SystemStack.'T-Mobile Prepaid (All)',
                		"N/A", SystemStack.'N/A')));
                
                Set(varCustomerImpacting, If(IsBlank(LookUp(colFormValuesPatch, fieldID="CustomerImpacting").fieldValue), varCurrentRecord.CustomerImpacting, 
                	Switch(LookUp(colFormValuesPatch, fieldID="CustomerImpacting").fieldValue,
                		"Yes", 'CustomerImpacting (gtmEntries)'.Yes,
                		"No", 'CustomerImpacting (gtmEntries)'.No)));
                
                Set(varMarketingSupportNeeded, If(IsBlank(LookUp(colFormValuesPatch, fieldID="MarketingSupportNeeded").fieldValue), varCurrentRecord.MarketingSupportNeeded, 
                	Switch(LookUp(colFormValuesPatch, fieldID="MarketingSupportNeeded").fieldValue,
                		"None", MarketingSupportNeeded.None,
                		"Low", MarketingSupportNeeded.Low,
                		"Medium", MarketingSupportNeeded.Medium,
                		"High", MarketingSupportNeeded.High)));
                
                Set(varPTLOESWAG, If(IsBlank(LookUp(colFormValuesPatch, fieldID="PTLOESWAG").fieldValue), varCurrentRecord.PTLOESWAG, 
                	Switch(LookUp(colFormValuesPatch, fieldID="PTLOESWAG").fieldValue,
                		"XS = <$500k", PTLOESWAG.'XS = <$500k',
                		"S = $500K - $2M", PTLOESWAG.'S = $500K - $2M',
                		"M = $2M - $5M", PTLOESWAG.'M = $2M - $5M',
                		"L = $5M - $10M", PTLOESWAG.'L = $5M - $10M',
                		"XL = $10M - $20M", PTLOESWAG.'XL = $10M - $20M',
                		"XXL = >$20M", PTLOESWAG.'XXL = >$20M')));
                
                Set(varThreeYearNPV, If(IsBlank(LookUp(colFormValuesPatch, fieldID="ThreeYearNPV").fieldValue), varCurrentRecord.ThreeYearNPV, 
                	Switch(LookUp(colFormValuesPatch, fieldID="ThreeYearNPV").fieldValue,
                		"Low <$25M", ThreeYearNPV.'Low <$25M',
                		"Med $25-$100M", ThreeYearNPV.'Med $25-$100M',
                		"High >$100M", ThreeYearNPV.'High >$100M')));
                
                Set(varAnnualGALiftEstimate, If(IsBlank(LookUp(colFormValuesPatch, fieldID="AnnualGALiftEstimate").fieldValue), varCurrentRecord.AnnualGALiftEstimate, 
                	Switch(LookUp(colFormValuesPatch, fieldID="AnnualGALiftEstimate").fieldValue,
                		"N/A", AnnualGALiftEstimate.'N/A',
                		"Low: 1 - 50K", AnnualGALiftEstimate.'Low: 1 - 50K',
                		"Med: 50 - 200K", AnnualGALiftEstimate.'Med: 50 - 200K',
                		"High: > 200K", AnnualGALiftEstimate.'High: > 200K')));
                
                Set(varDesiredExecution, If(IsBlank(LookUp(colFormValuesPatch, fieldID="DesiredExecution").fieldValue), varCurrentRecord.DesiredExecution, 
                	Switch(LookUp(colFormValuesPatch, fieldID="DesiredExecution").fieldValue,
                		"FRP Drop", DesiredExecution.'FRP Drop',
                		"Monthly EIP Bill Credit", DesiredExecution.'Monthly EIP Bill Credit',
                		"OEM Fulfilled", DesiredExecution.'OEM Fulfilled',
                        "Gift Card", DesiredExecution.'Gift Card',
                		"One-Time Credit", DesiredExecution.'One-Time Credit',
                		"Rebate", DesiredExecution.Rebate,
                		"Offline Script", DesiredExecution.'Offline Script',
                		"Other", DesiredExecution.Other,
                		"POS MAC (Sprint)", DesiredExecution.'POS MAC (Sprint)',
                		"N/A", DesiredExecution.'N/A',
                		"Instant Rebate", DesiredExecution.'Instant Rebate')));
                
                Set(varBusinessBenefit, If(IsBlank(LookUp(colFormValuesPatch, fieldID="BusinessBenefit").fieldValue), varCurrentRecord.BusinessBenefit, 
                Switch(LookUp(colFormValuesPatch, fieldID="BusinessBenefit").fieldValue,
                "GA Lift", BusinessBenefit.'GA Lift',
                "Churn Decrease", BusinessBenefit.'Churn Decrease',
                "ARPU Increase", BusinessBenefit.'ARPU Increase',
                "Cost Savings", BusinessBenefit.'Cost Savings',
                "Cash Flow Redux", BusinessBenefit.'Cash Flow Redux',
                "Compliance", BusinessBenefit.Compliance,
                "Risk Mitigation", BusinessBenefit.'Risk Mitigation',
                "Other (Describe)", BusinessBenefit.'Other (Describe)')));
                
                Set(varPriority, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Priority").fieldValue), varCurrentRecord.Priority, 
                Switch(LookUp(colFormValuesPatch, fieldID="Priority").fieldValue,
                "1-High", Priority.'1-High',
                "2-Medium", Priority.'2-Medium',
                "3-Low", Priority.'3-Low')));
                
                Set(varTargetAudienceSegment, If(IsBlank(LookUp(colFormValuesPatch, fieldID="TargetAudienceSegment").fieldValue), varCurrentRecord.TargetAudienceSegment, 
                Switch(LookUp(colFormValuesPatch, fieldID="TargetAudienceSegment").fieldValue,
                "N/A", TargetAudienceSegment.'N/A',
                "Military", TargetAudienceSegment.Military,
                "Aqualized", TargetAudienceSegment.Aqualizard,
                "55+", TargetAudienceSegment.'55+',
                "Hispanic", TargetAudienceSegment.Hispanic,
                "First Responder", TargetAudienceSegment.'First Responder',
                "Pride", TargetAudienceSegment.Pride,
                "TFB-SMB", TargetAudienceSegment.'TFB-SMB',
                "TFB-Small Bus.", TargetAudienceSegment.'TFB-Small Bus.',
                "TFB-Public Sector", TargetAudienceSegment.'TFB-Public Sector',
                "TFB-Enterprise", TargetAudienceSegment.'TFB-Enterprise',
                "Other", TargetAudienceSegment.Other)));
                
                Set(varAudienceSpecificCommunications, If(IsBlank(LookUp(colFormValuesPatch, fieldID="AudienceSpecificCommunications").fieldValue), varCurrentRecord.AudienceSpecificCommunications, 
                Switch(LookUp(colFormValuesPatch, fieldID="AudienceSpecificCommunications").fieldValue,
                "N/A", AudienceSpecificCommunications.'N/A',
                "Prospect", AudienceSpecificCommunications.Prospect,
                "Base", AudienceSpecificCommunications.Base,
                "Both Base and Prospect", AudienceSpecificCommunications.'Both Base and Prospect',
                "Other", AudienceSpecificCommunications.Other)));
                
                Set(varGoesOnCalendar, If(IsBlank(LookUp(colFormValuesPatch, fieldID="GoesOnCalendar").fieldValue), varCurrentRecord.GoesOnCalendar, 
                Switch(LookUp(colFormValuesPatch, fieldID="GoesOnCalendar").fieldValue,
                "No", 'GoesOnCalendar (gtmEntries)'.No, 
                "Yes", 'GoesOnCalendar (gtmEntries)'.Yes)));
                
                Set(varIntegratedMarketing, If(IsBlank(LookUp(colFormValuesPatch, fieldID="IntegratedMarketing").fieldValue), varCurrentRecord.IntegratedMarketing, 
                Switch(LookUp(colFormValuesPatch, fieldID="IntegratedMarketing").fieldValue,
                "Prepaid", IntegratedMarketing.Prepaid,
                "Postpaid", IntegratedMarketing.Postpaid,
                "Business", IntegratedMarketing.Business,
                "H & E", IntegratedMarketing.'H & E',
                "Brand + Network", IntegratedMarketing.'Brand + Network',
                "BEST (Bus Dev. Ent. Sponsorships. TMT)", IntegratedMarketing.'BEST (Bus Dev. Ent. Sponsorships. TMT)',
                "STR (Small Town Rural)", IntegratedMarketing.'STR (Small Town Rural)',
                "TMT (T-Mo Tuesdays)", IntegratedMarketing.'TMT (T-Mo Tuesdays)',
                "Other", IntegratedMarketing.Other)));
                
                Set(varValidationCheck, If(IsBlank(LookUp(colFormValuesPatch, fieldID="ValidationCheck").fieldValue), varCurrentRecord.ValidationCheck, 
                Switch(LookUp(colFormValuesPatch, fieldID="ValidationCheck").fieldValue,
                "One Time (Initial)", ValidationCheck.'One Time (Initial)',
                "Other", ValidationCheck.Other,
                "On-Going", ValidationCheck.'On-Going')));
                
                Select(btn_SetVariables2)
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Set Patch Variables 1"
            Visible: =varDevMode
            Width: =150
            X: =1195
            Y: =55
            ZIndex: =29

        btn_SetVariables2 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(105, 121, 126, 1)
            FocusedBorderColor: =btn_SetVariables2.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =// ***** Set Toggle Variables to Patch ***** //
                Set(varLimitedTimeOffer, If(IsBlank(LookUp(colFormValuesPatch, fieldID="LimitedTimeOffer").fieldValue), varCurrentRecord.LimitedTimeOffer, 
                Switch(LookUp(colFormValuesPatch, fieldID="LimitedTimeOffer").fieldValue,
                "true", 'LimitedTimeOffer (gtmEntries)'.Yes, 
                "false", 'LimitedTimeOffer (gtmEntries)'.No)));
                
                Set(varIntegration, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Integration").fieldValue), varCurrentRecord.Integration, 
                Switch(LookUp(colFormValuesPatch, fieldID="Integration").fieldValue,
                "true", 'Integration (gtmEntries)'.Yes, 
                "false", 'Integration (gtmEntries)'.No)));
                
                Set(varMAPRestricted, If(IsBlank(LookUp(colFormValuesPatch, fieldID="MAPRestricted").fieldValue), varCurrentRecord.MAPRestricted, 
                Switch(LookUp(colFormValuesPatch, fieldID="MAPRestricted").fieldValue,
                "true", 'MAPRestricted (gtmEntries)'.Yes, 
                "false", 'MAPRestricted (gtmEntries)'.No)));
                
                Set(varIsolatedCapacity, If(IsBlank(LookUp(colFormValuesPatch, fieldID="IsolatedCapacity").fieldValue), varCurrentRecord.IsolatedCapacity, 
                Switch(LookUp(colFormValuesPatch, fieldID="IsolatedCapacity").fieldValue,
                "true", 'IsolatedCapacity (gtmEntries)'.Yes, 
                "false", 'IsolatedCapacity (gtmEntries)'.No)));
                
                Set(varMarket, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Market").fieldValue), varCurrentRecord.Market, 
                Switch(LookUp(colFormValuesPatch, fieldID="Market").fieldValue,
                "true", 'Market (gtmEntries)'.Local, 
                "false", 'Market (gtmEntries)'.National)));
                
                Set(varEmployeeDiscount, If(IsBlank(LookUp(colFormValuesPatch, fieldID="EmployeeDiscount").fieldValue), varCurrentRecord.EmployeeDiscount, 
                Switch(LookUp(colFormValuesPatch, fieldID="EmployeeDiscount").fieldValue,
                "true", 'EmployeeDiscount (gtmEntries)'.Yes, 
                "false", 'EmployeeDiscount (gtmEntries)'.No)));
                
                Set(varEmployeeEligible, If(IsBlank(LookUp(colFormValuesPatch, fieldID="EmployeeEligible").fieldValue), varCurrentRecord.EmployeeEligible, 
                Switch(LookUp(colFormValuesPatch, fieldID="EmployeeEligible").fieldValue,
                "true", 'EmployeeEligible (gtmEntries)'.Yes, 
                "false", 'EmployeeEligible (gtmEntries)'.No)));
                
                Set(varDarkStatus, If(IsBlank(LookUp(colFormValuesPatch, fieldID="DarkStatus").fieldValue), varCurrentRecord.DarkStatus, 
                Switch(LookUp(colFormValuesPatch, fieldID="DarkStatus").fieldValue,
                "true", 'DarkStatus (gtmEntries)'.Dark, 
                "false", 'DarkStatus (gtmEntries)'.'Not Dark')));
                
                Set(varCarrierFreedom, If(IsBlank(LookUp(colFormValuesPatch, fieldID="CarrierFreedom").fieldValue), varCurrentRecord.CarrierFreedom, 
                Switch(LookUp(colFormValuesPatch, fieldID="CarrierFreedom").fieldValue,
                "true", 'CarrierFreedom (gtmEntries)'.Yes, 
                "false", 'CarrierFreedom (gtmEntries)'.No)));
                
                Set(varActiveServiceRequired, If(IsBlank(LookUp(colFormValuesPatch, fieldID="ActiveServiceRequired").fieldValue), varCurrentRecord.ActiveServiceRequired, 
                Switch(LookUp(colFormValuesPatch, fieldID="ActiveServiceRequired").fieldValue,
                "true", 'ActiveServiceRequired (gtmEntries)'.Yes, 
                "false", 'ActiveServiceRequired (gtmEntries)'.No)));
                
                Set(varJUMPEligible, If(IsBlank(LookUp(colFormValuesPatch, fieldID="JUMPEligible").fieldValue), varCurrentRecord.JUMPEligible, 
                Switch(LookUp(colFormValuesPatch, fieldID="JUMPEligible").fieldValue,
                "true", 'JUMPEligible (gtmEntries)'.Yes, 
                "false", 'JUMPEligible (gtmEntries)'.No)));
                
                
                Set(varPromoDetailsLocked, If(IsBlank(LookUp(colFormValuesPatch, fieldID="PromoDetailsLocked").fieldValue), varCurrentRecord.PromoDetailsLocked, 
                Switch(LookUp(colFormValuesPatch, fieldID="PromoDetailsLocked").fieldValue,
                "true", 'PromoDetailsLocked (gtmEntries)'.Yes,
                "false", 'PromoDetailsLocked (gtmEntries)'.No)));
                
                
                Set(varReplacingAnExistingProduct, If(IsBlank(LookUp(colFormValuesPatch, fieldID="ReplacingAnExistingProduct").fieldValue), varCurrentRecord.ReplacingAnExistingProduct, 
                Switch(LookUp(colFormValuesPatch, fieldID="ReplacingAnExistingProduct").fieldValue,
                "true", 'ReplacingAnExistingProduct (gtmEntries)'.Yes, 
                "false", 'ReplacingAnExistingProduct (gtmEntries)'.No)));
                
                Set(varMonitoring, If(IsBlank(LookUp(colFormValuesPatch, fieldID="Monitoring").fieldValue), varCurrentRecord.Monitoring, 
                Switch(LookUp(colFormValuesPatch, fieldID="Monitoring").fieldValue,
                "true", 'Monitoring (gtmEntries)'.Yes, 
                "false", 'Monitoring (gtmEntries)'.No)));
                
                // ***** Set MultiSelect Variables to Patch ***** //
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="GALiftType").fieldID), varCurrentRecord.GALiftType, 
                Clear(colGALiftType);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="GALiftType").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colGALiftType, 
                Switch(Result,
                "Voice: New BAN", GALiftType.'Voice: New BAN',
                "Voice: AAL", GALiftType.'Voice: AAL',
                "Non-Voice", GALiftType.'Non-Voice',
                "None", GALiftType.None)));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="RatePlanRequirements").fieldID), varCurrentRecord.RatePlanRequirements, 
                Clear(colRatePlanRequirements);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="RatePlanRequirements").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colRatePlanRequirements, 
                Switch(Result,
                        "$50 Google One", RatePlanRequirements.'$50 Google One',
                        "$60 Amazon Prime", RatePlanRequirements.'$60 Amazon Prime',
                        "4 for $120 with Amazon Prime", RatePlanRequirements.'4 for $120 with Amazon Prime',
                        "2 for $80 with Amazon Prime", RatePlanRequirements.'2 for $80 with Amazon Prime',
                        "4 for $100 (defeatured)", RatePlanRequirements.'4 for $100 (defeatured)',
                        "No Rate Plan Requirements", RatePlanRequirements.'No Rate Plan Requirements')));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="VoiceRatePlanRequirements").fieldID), varCurrentRecord.VoiceRatePlanRequirements,
                Clear(colVoiceRatePlanRequirements);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="VoiceRatePlanRequirements").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colVoiceRatePlanRequirements, 
                Switch(Result,
                "Magenta", VoiceRatePlanRequirements.Magenta,
                "Magenta First Responder", VoiceRatePlanRequirements.'Magenta First Responder',
                "Magenta Military", VoiceRatePlanRequirements.'Magenta Military',
                "Magenta No Credit Check", VoiceRatePlanRequirements.'Magenta No Credit Check',
                "Magenta Plus", VoiceRatePlanRequirements.'Magenta Plus',
                "Magenta Plus First Responder", VoiceRatePlanRequirements.'Magenta Plus First Responder',
                "Magenta Plus Military", VoiceRatePlanRequirements.'Magenta Plus Military',
                "Magenta Plus UNL 55+", VoiceRatePlanRequirements.'Magenta Plus UNL 55+',
                "Magenta UNL 55+", VoiceRatePlanRequirements.'Magenta UNL 55+',
                "No Specific Plan Required", VoiceRatePlanRequirements.'No Specific Plan Required',
                "Prepaid", VoiceRatePlanRequirements.Prepaid,
                //"SCNC", VoiceRatePlanRequirements.SCNC,
                "Simple Choice w/UNL High Speed", VoiceRatePlanRequirements.'Simple Choice w/UNL High Speed',
                //"TFB 13+ Lines", VoiceRatePlanRequirements.'TFB 13+ Lines',
                //"TFB<=12 Lines", VoiceRatePlanRequirements.'TFB <=12 Lines',
                "Business Unlimited", VoiceRatePlanRequirements.'Business Unlimited',
                "Business Unlimited Plus", VoiceRatePlanRequirements.'Business Unlimited Plus',
                "Gov't Unlimited", VoiceRatePlanRequirements.'Gov''t Unlimited',
                "Gov't Unlimited Plus", VoiceRatePlanRequirements.'Gov''t Unlimited Plus',
                "TMO Essentials", VoiceRatePlanRequirements.'TMO Essentials',
                "TMO ONE (TI/TE)", VoiceRatePlanRequirements.'TMO ONE (TI/TE)',
                "TMO ONE Military", VoiceRatePlanRequirements.'TMO ONE Military',
                "TMO ONE Military w/ONE+ Family", VoiceRatePlanRequirements.'TMO ONE Military w/ONE+ Family',
                "TMO ONE No Credit Check", VoiceRatePlanRequirements.'TMO ONE No Credit Check',
                "TMO ONE UNL 55+", VoiceRatePlanRequirements.'TMO ONE UNL 55+',
                "TMO ONE UNL 55+ w/ONE+Family", VoiceRatePlanRequirements.'TMO ONE UNL 55+ w/ONE+Family',
                "N/A", VoiceRatePlanRequirements.'N/A')));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="AdditionalEligibilityRequirements").fieldID), varCurrentRecord.AdditionalEligibilityRequirements, 
                Clear(colAdditionalEligibilityRequirements);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="AdditionalEligibilityRequirements").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colAdditionalEligibilityRequirements, 
                Switch(Result,
                "Add-A-Line", AdditionalEligibilityRequirements.'Add-A-Line',
                "Port-in (Excludes all MVNOs, Metro, Simply Prepaid)", AdditionalEligibilityRequirements.'Port-in (Excludes all MVNOs, Metro, Simply Prepaid)',
                "Trade-In (must upload device SKU list as attachment, above)", AdditionalEligibilityRequirements.'Trade-In (must upload device SKU list as attachment, above)',
                "N/A", AdditionalEligibilityRequirements.'N/A',
                "New BAN", AdditionalEligibilityRequirements.'New BAN',
                "Other", AdditionalEligibilityRequirements.Other)));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="Channels").fieldID), varCurrentRecord.Channels, 
                Clear(colChannels);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="Channels").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colChannels, 
                Switch(Result,
                "N/A", Channels.'N/A',
                "Affiliate (Sprint)", Channels.'Affiliate (Sprint)',
                "Apple in Store", Channels.'Apple in Store',
                "Branded Retail Consumer", Channels.'Branded Retail Consumer',
                "Care", Channels.Care,
                "Costco in Store", Channels.'Costco in Store',
                "Dealer (Sprint)", Channels.'Dealer (Sprint)',
                "My TMO", Channels.'My TMO',
                "MyMetro", Channels.MyMetro,
                "MetrobyT-Mobile.com", Channels.'MetrobyT-Mobile.com',
                "National Retail (non Wireless Advocates)", Channels.'National Retail (non Wireless Advocates)',
                "Virtual Retail", Channels.'Virtual Retail',
                "TFB General Businesses", Channels.'TFB General Businesses',
                "TFB Government", Channels.'TFB Government',
                "TFB Micro Business (TFB Retail)", Channels.'TFB Micro Business (TFB Retail)',
                "TFB Sole Proprietor", Channels.'TFB Sole Proprietor',
                "TMO App", Channels.'TMO App',
                "TMO.com", Channels.'TMO.com',
                "Wireless Advocates (Military, Costco Direct Ship)", Channels.'Wireless Advocates (Military, Costco Direct Ship)',
                "M2M", Channels.M2M,
                "Metro Indirect", Channels.'Metro Indirect',
                "Metro COR", Channels.'Metro COR',
                "Metro.com", Channels.'MetrobyT-Mobile.com',
                "Metro App", Channels.MyMetro,
                "Metro My Account", Channels.'Metro My Account',
                "Metro IVR", Channels.'Metro IVR',
                "Metro National Retail", Channels.'Metro National Retail',
                "Other", Channels.Other,
                "Metro Care", Channels.'Metro Care',
                "Metro App", Channels.'Metro My Account',
                "National Retail", Channels.'National Retail')));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="CustomerSegment").fieldID), varCurrentRecord.CustomerSegment, 
                Clear(colCustomerSegment);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="CustomerSegment").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colCustomerSegment, 
                Switch(Result,
                "Business CL (Sprint)", CustomerSegments.'Business CL (Sprint)',
                "Metro", CustomerSegments.Metro,
                "Postpaid Acquisition", CustomerSegments.'Postpaid Acquisition',
                "Postpaid Base", CustomerSegments.'Postpaid Base',
                "Prepaid/U2.0", CustomerSegments.'Prepaid/U2.0',
                "Puerto Rico", CustomerSegments.'Puerto Rico',
                "TFB", CustomerSegments.TFB,
                "Wholesale", CustomerSegments.Wholesale,
                "Other", CustomerSegments.Other,
                "N/A", CustomerSegments.'N/A',
                "Other", CustomerSegments.Other,
                "M2M", CustomerSegments.M2M,
                "Metro Acquisition", CustomerSegments.'Metro Acquisition',
                "Metro Base Management", CustomerSegments.'Metro Base Management',
                "Metro SMO", CustomerSegments.'Metro SMO')));
                );
                
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="MobileInternetPlanRequirements").fieldID), varCurrentRecord.MobileInternetPlanRequirements, 
                Clear(colMobileInternetPlanRequirements);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="MobileInternetPlanRequirements").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colMobileInternetPlanRequirements, 
                Switch(Result,
                "Other(i.e. TFB Pooled MI Plan)", MobileInternetPlanRequirements.'Other(i.e. TFB Pooled MI Plan)',
                "Simple Choice w/ 10GB", MobileInternetPlanRequirements.'Simple Choice w/ 10GB',
                "Simple Choice w/ 2GB", MobileInternetPlanRequirements.'Simple Choice w/ 2GB',
                "Simple Choice w/ 6GB", MobileInternetPlanRequirements.'Simple Choice w/ 6GB',
                "Simple Choice w/ UNL", MobileInternetPlanRequirements.'Simple Choice w/ UNL',
                "SyncUp Drive UNL w/ 10GB", MobileInternetPlanRequirements.'SyncUp Drive UNL w/ 10GB',
                "SyncUp Drive UNL w/ 14GB", MobileInternetPlanRequirements.'SyncUp Drive UNL w/ 14GB',
                "SyncUp Drive UNL w/ 18GB", MobileInternetPlanRequirements.'SyncUp Drive UNL w/ 18GB',
                "SyncUp Drive UNL w/ 22GB", MobileInternetPlanRequirements.'SyncUp Drive UNL w/ 22GB',
                "SyncUp Drive UNL w/ 2GB", MobileInternetPlanRequirements.'SyncUp Drive UNL w/ 2GB',
                "SyncUp Drive UNL w/ 6GB", MobileInternetPlanRequirements.'SyncUp Drive UNL w/ 6GB',
                "SyncUp Fleet Government (TI/TE)", MobileInternetPlanRequirements.'SyncUp Fleet Government (TI/TE)',
                "SyncUp Fleet TFB (TI/TE)", MobileInternetPlanRequirements.'SyncUp Fleet TFB (TI/TE)',
                //"TMO + Next Aware (TE NCC)", MobileInternetPlanRequirements.'TMO + Next Aware (TE NCC)',
                "TMO + Nest Aware (TE)", MobileInternetPlanRequirements.'TMO + Nest Aware (TE)',
                //"TMO + Next Aware (TI NCC)", MobileInternetPlanRequirements.'TMO + Next Aware (TI NCC)',
                "TMO + Nest Aware (TI)", MobileInternetPlanRequirements.'TMO + Nest Aware (TI)',
                //"TMO ONE NCC w/ 10GB", MobileInternetPlanRequirements.'TMO ONE NCC w/ 10GB',
                //"TMO ONE NCC w/ 2GB", MobileInternetPlanRequirements.'TMO ONE NCC w/ 2GB',
                //"TMO ONE NCC w/ 6GB", MobileInternetPlanRequirements.'TMO ONE NCC w/ 6GB',
                //"TMO ONE NCC w/ UNL", MobileInternetPlanRequirements.'TMO ONE NCC w/ UNL',
                "TMO ONE Unlimited (TI/TE)", MobileInternetPlanRequirements.'TMO ONE Unlimited (TI/TE)',
                "Other", MobileInternetPlanRequirements.Other,
                "DIGITS Talk and Text (TI/TE)", MobileInternetPlanRequirements.'DIGITS Talk and Text (TI/TE)',
                "Moxee Signal", MobileInternetPlanRequirements.'Moxee Signal',
                "Magenta Unlimited", MobileInternetPlanRequirements.'Magenta Unlimited',
                "Magenta Plus Unlimited", MobileInternetPlanRequirements.'Magenta Plus Unlimited',
                "SyncUp Pets (TI/TE)", MobileInternetPlanRequirements.'SyncUp Pets (TI/TE)',
                "N/A", MobileInternetPlanRequirements.'N/A')));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="WearablePlanRequirements").fieldID), varCurrentRecord.WearablePlanRequirements, 
                Clear(colWearablePlanRequirements);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="WearablePlanRequirements").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colWearablePlanRequirements, 
                Switch(Result,
                "Apple DIGITS", WearablePlanRequirements.'Apple DIGITS',
                "Data w/paired DIGITS", WearablePlanRequirements.'Data w/paired DIGITS',
                "High Speed Data w/paired DIGITS", WearablePlanRequirements.'High Speed Data w/paired DIGITS',
                "Simple Choice", WearablePlanRequirements.'Simple Choice',
                "N/A", WearablePlanRequirements.'N/A',
                "Timex Kids (TI/TE)", WearablePlanRequirements.'Timex Kids (TI/TE)',
                "Magenta Wearable", WearablePlanRequirements.'Magenta Wearable',
                "TMO ONE (TI/TE)", WearablePlanRequirements.'TMO ONE (TI/TE)')));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="PurchaseTypeFinancing").fieldID), varCurrentRecord.PurchaseTypeFinancing, 
                Clear(colPurchaseTypeFinancing);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="PurchaseTypeFinancing").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colPurchaseTypeFinancing, 
                Switch(Result,
                "BYOD", PurchaseTypeFinancing.BYOD,
                "EIP", PurchaseTypeFinancing.EIP,
                "JOD", PurchaseTypeFinancing.JOD,
                "Lease (Sprint)", PurchaseTypeFinancing.'Lease (Sprint)',
                "Off Contract/Agreement (Sprint)", PurchaseTypeFinancing.'Off Contract/Agreement (Sprint)',
                "Subsidy (Sprint)", PurchaseTypeFinancing.'Subsidy (Sprint)',
                "Pay-In-Full", PurchaseTypeFinancing.'Pay-In-Full')));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="DeviceFulfillmentInScope").fieldID), varCurrentRecord.DeviceFulfillmentInScope, 
                Clear(colDeviceFulfillmentInScope);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="DeviceFulfillmentInScope").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colDeviceFulfillmentInScope, 
                Switch(Result,
                "Back Order", DeviceFulfillmentInScope.'Back Order',
                "Ship To", DeviceFulfillmentInScope.'Ship To',
                "N/A", DeviceFulfillmentInScope.'N/A')));
                );
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="AddALineTypes").fieldID), varCurrentRecord.AddALineTypes, 
                Clear(colAddALineTypes);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="AddALineTypes").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colAddALineTypes, 
                Switch(Result,
                "Voice", AddALineTypes.Voice,
                "IoT", AddALineTypes.IoT,
                "MI", AddALineTypes.MI,
                "Wearable", AddALineTypes.Wearable)));
                );
                
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="Testing").fieldID), varCurrentRecord.Testing, 
                Clear(colTesting);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="Testing").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colTesting, 
                Switch(Result,
                "C2T-E2E", Testing.'CXT-E2E',
                "E2E", Testing.E2E,
                "Functional", Testing.Functional,
                "TOPS", Testing.TOPS)));
                );
                
                
                If(IsBlank(LookUp(colFormValuesPatch, fieldID="PlanAndFeatureRequirementsBuild").fieldID), varCurrentRecord.PlanAndFeatureRequirementsBuild, 
                Clear(colPlanAndFeatureRequirementsBuild);
                ForAll(Filter(Split(LookUp(colFormValuesPatch, fieldID="PlanAndFeatureRequirementsBuild").fieldValue,"*"), !IsBlank(Result)), 
                Collect(colPlanAndFeatureRequirementsBuild, 
                Switch(Result,
                "Add on Feature (non-Data)", PlanAndFeatureRequirementsBuild.'Add on Feature (non-data)',
                "Add on Feature", PlanAndFeatureRequirementsBuild.'Add on Feature',
                "BHC/UCC", PlanAndFeatureRequirementsBuild.'BHC/UCC',
                "Magenta", PlanAndFeatureRequirementsBuild.Magenta,
                "Other", PlanAndFeatureRequirementsBuild.Other,
                "Business/Government Unlimited", PlanAndFeatureRequirementsBuild.'Business/Government Unlimited',
                "Data Feature", PlanAndFeatureRequirementsBuild.'Data Feature',
                "DIGITS Plan", PlanAndFeatureRequirementsBuild.'DIGITS Plan',
                "IOT Plan", PlanAndFeatureRequirementsBuild.'IOT Plan',
                "Legacy (Pre March 2013)", PlanAndFeatureRequirementsBuild.'Legacy (Pre March 2013)',
                "No Credit Check", PlanAndFeatureRequirementsBuild.'No Credit Check',
                "Postpaid consumer", PlanAndFeatureRequirementsBuild.'Postpaid Consumer',
                "Prepaid consumer", PlanAndFeatureRequirementsBuild.'Prepaid Consumer',
                "Promotional Variation", PlanAndFeatureRequirementsBuild.'Promotional Variation',
                "Simple Choice", PlanAndFeatureRequirementsBuild.'Simple Choice',
                "Tablet Plan", PlanAndFeatureRequirementsBuild.'Tablet Plan',
                "Tax Exclusive", PlanAndFeatureRequirementsBuild.'Tax Exclusive',
                "Tax Inclusive", PlanAndFeatureRequirementsBuild.'Tax Inclusive',
                "TFB", PlanAndFeatureRequirementsBuild.TFB,
                "TMO ONE", PlanAndFeatureRequirementsBuild.'TMO ONE',
                "TMO ONE Military", PlanAndFeatureRequirementsBuild.'TMO ONE Military',
                "Unlimited 55+", PlanAndFeatureRequirementsBuild.'Unlimited 55+',
                "Voice Plan", PlanAndFeatureRequirementsBuild.'Voice Plan',
                "Wearable Plan", PlanAndFeatureRequirementsBuild.'Wearable Plan',
                "Other", PlanAndFeatureRequirementsBuild.Other,
                "CXT-E2E", PlanAndFeatureRequirementsBuild.'CXT-E2E',
                "N/A", PlanAndFeatureRequirementsBuild.'N/A',
                "First Responder", PlanAndFeatureRequirementsBuild.'First Responder',
                "BTS", PlanAndFeatureRequirementsBuild.BTS,
                "Add on Feature (yes-Data)", PlanAndFeatureRequirementsBuild.'Add on Feature (yes-data)')));
                );
                
                Reset(com_FormSection_1);Reset(com_FormSection_2);Reset(com_FormSection_3);Reset(com_FormSection_4);Reset(com_FormSection_5);
                UpdateContext({varTempVariablesComplete: "end"});
                // ****** Call Patch Statement Button
                Select(btn_PatchValues);
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Set Patch Variables 2"
            Visible: =varDevMode
            Width: =150
            X: =1195
            Y: =78
            ZIndex: =39

        btn_Patch_CR As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Fill: =RGBA(105, 121, 126, 1)
            FocusedBorderColor: =btn_Patch_CR.BorderColor
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =20
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
            OnSelect: |-
                =If(com_FormSection_ChangeRequest_1.CRFieldID = "Other",
                Patch(ChangeRequests, Defaults(ChangeRequests), 
                    {
                        gtmEntry: varCurrentRecord,
                        T1Reviewer: varCRApprovalUser,
                        FieldName: com_FormSection_ChangeRequest_1.CRField,
                        FieldID: com_FormSection_ChangeRequest_1.CRFieldID,
                        OriginalValue: com_FormSection_ChangeRequest_1.CurrentFieldValue,
                        NewValue: com_FormSection_ChangeRequest_1.CRNewValue,
                        JustificationForChange: com_FormSection_ChangeRequest_1.CRReason,
                        FieldNameOther: com_FormSection_ChangeRequest_1.CRFieldIDOther,
                        CRApprovalStage: ApprovalStatus.Pending}
                ),
                Patch(ChangeRequests, Defaults(ChangeRequests), 
                    {
                        gtmEntry: varCurrentRecord,
                        FieldChangeRecord: varLastRecordSubmit,
                        T1Reviewer: varCRApprovalUser,
                        FieldName: com_FormSection_ChangeRequest_1.CRField,
                        FieldID: com_FormSection_ChangeRequest_1.CRFieldID,
                        OriginalValue: com_FormSection_ChangeRequest_1.CurrentFieldValue,
                        NewValue: com_FormSection_ChangeRequest_1.CRNewValue,
                        JustificationForChange: com_FormSection_ChangeRequest_1.CRReason,
                        FieldNameOther: com_FormSection_ChangeRequest_1.CRFieldIDOther,
                        CRApprovalStage: ApprovalStatus.Pending}
                ));
                
                Clear(colFormValuesPatch);
                UpdateContext({varChangeRequest: false});
                ClearCollect(colChangeRequests, Filter(varCurrentRecord.'ChangeRequests (cat_ChangeRequest_gtmEntry_cat_gtmEntry)', CRApprovalStage = ApprovalStatus.Pending));
                
                Set(varBlurBackground, false);
                Set(varChangeRequest, false);
                UpdateContext({varShowChangeRequestForm: false});
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -50%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Text: ="Patch to CR"
            Visible: =varDevMode
            Width: =150
            X: =1033
            Y: =112
            ZIndex: =50

